This file is a merged representation of a subset of the codebase, containing files not matching ignore patterns, combined into a single document by Repomix.
The content has been processed where empty lines have been removed, content has been compressed (code blocks are separated by ⋮---- delimiter).

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
4. Repository files, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

- Pay special attention to the Repository Instruction. These contain important context and guidelines specific to this project.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching these patterns are excluded: .cursor, lib, dist, build, *.log, repomix*, .cursor, lib, dist, build, *.log, repomix*
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Empty lines have been removed from all files
- Content has been compressed - code blocks are separated by ⋮---- delimiter
</notes>

<additional_info>

</additional_info>

</file_summary>

<directory_structure>
.editorconfig
.gitattributes
.github/FUNDING.yml
.gitignore
app-manager/config.json
app-manager/start_comfyui.sh
app-manager/stop_comfyui.sh
base_image_src/build_base/apps.sh
base_image_src/build_base/packages.sh
base_image_src/code_server_base/settings.json
base_image_src/code_server_base/vsix/README.md
base_image_src/nginx_base/502.html
base_image_src/scripts_base/fix_venv.sh
base_image_src/scripts_base/manage_venv.sh
base_image_src/scripts_base/start.sh
docker-bake.hcl
Dockerfile
LICENSE
log-build.txt
nginx/nginx.conf
post_start.sh
README.md
scripts/pre_start.sh
scripts/start_comfyui.sh
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path=".editorconfig">
root = true

[*]
charset = utf-8
end_of_line = lf
insert_final_newline = true
indent_style = space
indent_size = 4
trim_trailing_whitespace = true

[*.md]
trim_trailing_whitespace = false

[*.yml]
indent_size = 2
indent_style = space

[*.yaml]
indent_size = 2
indent_style = space
</file>

<file path=".gitattributes">
* text=auto eol=lf
            *.sh text eol=lf
            *.py text eol=lf
            # Adicione outras extensões de arquivo de texto conforme necessário
</file>

<file path=".github/FUNDING.yml">
# These are supported funding model platforms
github: ashleykleynhans
buy_me_a_coffee: ashleyk
</file>

<file path=".gitignore">
.idea
.DS_Store
*.safetensors
.cursor
</file>

<file path="app-manager/config.json">
{
  "applications": [
    "ComfyUI"
  ]
}
</file>

<file path="app-manager/start_comfyui.sh">
#!/usr/bin/env bash
export PYTHONUNBUFFERED=1
cd /workspace/ComfyUI
source venv/bin/activate
echo "COMFYUI: Starting ComfyUI"
TCMALLOC="$(ldconfig -p | grep -Po "libtcmalloc.so.\d" | head -n 1)"
export LD_PRELOAD="${TCMALLOC}"
python3 main.py --listen 0.0.0.0 --port 3001 > /workspace/logs/comfyui.log 2>&1 &
echo "COMFYUI: ComfyUI Started"
deactivate
</file>

<file path="app-manager/stop_comfyui.sh">
#!/usr/bin/env bash
fuser -k 3001/tcp
</file>

<file path="base_image_src/build_base/apps.sh">
#!/usr/bin/env bash
# Install Jupyter, gdown and OhMyRunPod
pip3 install -U --no-cache-dir jupyterlab \
    jupyterlab_widgets \
    ipykernel \
    ipywidgets \
    gdown \
    OhMyRunPod
# Install code-server
curl -fsSL https://code-server.dev/install.sh | sh
# Install VS Code extensions from local VSIX files
code-server --install-extension /tmp/RSIP-Vision.nvidia-smi-plus-1.0.1.vsix
code-server --install-extension /tmp/vscode-ext.sync-rsync-0.36.0.vsix
# Install VS Code extensions
code-server --install-extension ms-python.python
code-server --install-extension ms-toolsai.jupyter
code-server --install-extension ms-toolsai.vscode-jupyter-powertoys
# Pre-install Jupyter kernel
python3 -m ipykernel install --name "python3" --display-name "Python 3"
# Install RunPod File Uploader
curl -sSL https://github.com/kodxana/RunPod-FilleUploader/raw/main/scripts/installer.sh -o installer.sh && \
    chmod +x installer.sh && \
    ./installer.sh
# Install rclone
curl https://rclone.org/install.sh | bash
# Update rclone
rclone selfupdate
# Install runpodctl
wget "https://github.com/runpod/runpodctl/releases/download/${RUNPODCTL_VERSION}/runpodctl-linux-amd64" -O runpodctl && \
    chmod a+x runpodctl && \
    mv runpodctl /usr/local/bin
# Install croc
curl https://getcroc.schollz.com | bash
# Install speedtest CLI
curl -s https://packagecloud.io/install/repositories/ookla/speedtest-cli/script.deb.sh | bash && \
    apt install -y speedtest
</file>

<file path="base_image_src/build_base/packages.sh">
#!/usr/bin/env bash
apt update
apt -y upgrade
apt install -y --no-install-recommends \
    build-essential \
    software-properties-common \
    python3-pip \
    python3-dev \
    nodejs \
    npm \
    bash \
    dos2unix \
    git \
    git-lfs \
    ncdu \
    nginx \
    net-tools \
    dnsutils \
    inetutils-ping \
    openssh-server \
    libglib2.0-0 \
    libsm6 \
    libgl1 \
    libxrender1 \
    libxext6 \
    ffmpeg \
    wget \
    curl \
    psmisc \
    rsync \
    vim \
    nano \
    zip \
    unzip \
    p7zip-full \
    htop \
    screen \
    tmux \
    bc \
    aria2 \
    cron \
    pkg-config \
    plocate \
    parallel \
    pv \
    sysstat \
    pigz \
    lz4 \
    zstd \
    cpio \
    jq \
    libcairo2-dev \
    libgoogle-perftools4 \
    libtcmalloc-minimal4 \
    apt-transport-https \
    ca-certificates
if [ -n "${PYTHON_VERSION}" ]; then
    # Install Python from deadsnakes PPA
    add-apt-repository ppa:deadsnakes/ppa
    apt install -y --no-install-recommends \
        "python${PYTHON_VERSION}" \
        "python${PYTHON_VERSION}-dev" \
        "python${PYTHON_VERSION}-venv" \
        "python3-tk"
    # Link Python
    rm /usr/bin/python
    ln -s /usr/bin/python${PYTHON_VERSION} /usr/bin/python
    rm /usr/bin/python3
    ln -s /usr/bin/python${PYTHON_VERSION} /usr/bin/python3
    # Install pip
    curl -sS https://bootstrap.pypa.io/get-pip.py | python${PYTHON_VERSION}
    # Upgrade pip
    python3 -m pip install --upgrade --no-cache-dir pip
    # Create symlink for pip3
    rm -f /usr/bin/pip3
    ln -s /usr/local/bin/pip3 /usr/bin/pip3
fi
update-ca-certificates
apt clean
rm -rf /var/lib/apt/lists/*
echo "en_US.UTF-8 UTF-8" > /etc/locale.gen
</file>

<file path="base_image_src/code_server_base/settings.json">
{
    "workbench.colorTheme": "Default Dark Modern",
    "workbench.startupEditor": "none",
    "workbench.enableExperiments": false,
    "telemetry.enableTelemetry": false,
    "telemetry.enableCrashReporter": false,
    "security.workspace.trust.enabled": false,
    "update.mode": "manual",
    "extensions.autoUpdate": false,
    "python.showStartPage": false,
    "jupyter.experiments.enabled": false,
    "jupyter.askForKernelRestart": false,
    "jupyter.askForKernelSource": false,
    "jupyter.alwaysTrustNotebooks": true,
    "extensions.ignoreRecommendations": true,
    "files.autoSave": "afterDelay",
    "files.autoSaveDelay": 1000
}
</file>

<file path="base_image_src/code_server_base/vsix/README.md">
# Placeholder for VSIX files
</file>

<file path="base_image_src/nginx_base/502.html">
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
  <style>
    body {
      background: url('https://images.unsplash.com/photo-1533749047139-189de3cf06d3?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2439&q=80') no-repeat center center fixed;
      background-size: cover;
      font-family: 'Arial', sans-serif;
      color: white;
    }
    .container {
      background: rgba(0,0,0,0.6);
      border-radius: 15px;
      padding: 20px;
    }
    .jumbotron {
      background: none;
    }
    h1, h5, h4 {
      text-shadow: 2px 2px 4px rgba(0,0,0,0.7);
    }
    .btn-primary {
      background-color: #007BFF;
      border-color: #007BFF;
      box-shadow: 2px 2px 4px rgba(0,0,0,0.4);
    }
    .btn-primary:hover {
      background-color: #0056b3;
      border-color: #0056b3;
    }
  </style>
  <title>Port Not Up Yet</title>
</head>
<body>
<div class="container mt-5">
  <div class="jumbotron">
    <h1>The port is not up yet</h1>
    <h5>NOTE: This is not necessarily an error</h5>
    <h4 style="color:#FF6347">Check your container logs for the following:</h4>
    <ul class="lead">
      <li>Ensure that the applications have completed syncing to /workspace.</li>
      <li>Ensure that there are no errors.</li>
      <li>Ensure that the logs say <strong>Container is READY!</strong></li>
    </ul>
    <h4>If the container is READY</h4>
    <ul class="lead">
      <li>Check your application logs (refer to the README for more information).</li>
    </ul>
    <button class="btn btn-primary" onclick="location.reload()">Refresh</button>
  </div>
</div>
</body>
</html>
</file>

<file path="base_image_src/scripts_base/fix_venv.sh">
#!/usr/bin/env bash
if [ "$#" -ne 2 ]; then
  echo "Usage: $0 <OLD_VENV> <NEW_VENV>"
  echo "   eg: $0 /venv /workspace/venv"
  exit 1
fi
OLD_PATH=${1}
NEW_PATH=${2}
echo "VENV: Fixing venv. Old Path: ${OLD_PATH}  New Path: ${NEW_PATH}"
cd ${NEW_PATH}/bin
PYTHON_VERSION=$(python3 -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')")
echo "Python version is ${PYTHON_VERSION}.x"
# Update the venv path in the activate script
if [[ "$PYTHON_VERSION" == "3.10" ]]; then
    sed -i "s|VIRTUAL_ENV=\"${OLD_PATH}\"|VIRTUAL_ENV=\"${NEW_PATH}\"|" activate
elif [[ "$PYTHON_VERSION" == "3.12" ]]; then
    sed -i "s|VIRTUAL_ENV=${OLD_PATH}|VIRTUAL_ENV=${NEW_PATH}|" activate
else
    sed -i "s|VIRTUAL_ENV=\"${OLD_PATH}\"|VIRTUAL_ENV=\"${NEW_PATH}\"|" activate
fi
# Update the venv path in the shebang for all files containing a shebang
sed -i "s|#\!${OLD_PATH}/bin/python3|#\!${NEW_PATH}/bin/python3|" *
</file>

<file path="base_image_src/scripts_base/manage_venv.sh">
#!/usr/bin/env bash
set -e  # Exit the script if any statement returns a non-true return value
# Paths
VENV_PATH="/venv"
NETWORK_STORAGE_PATH="/workspace/backups"
BACKUP_NAME="venv_backup.zst"
BACKUP_PATH="${NETWORK_STORAGE_PATH}/${BACKUP_NAME}"
# Backup venv
backup_venv() {
    echo "Backing up $VENV_PATH to $BACKUP_PATH"
    # Ensure network storage directory exists
    mkdir -p "$NETWORK_STORAGE_PATH"
    # Check if backup file already exists
    if [ -f "$BACKUP_PATH" ]; then
        read -p "Backup file already exists. Do you want to overwrite it? (y/n): " overwrite_choice
        if [[ "$overwrite_choice" != "y" && "$overwrite_choice" != "Y" ]]; then
            echo "Backup operation cancelled."
            exit 0
        fi
    fi
    # Backup and compress venv with progress
    tar --use-compress-program="zstd -10 --long=31" -cf "$BACKUP_PATH" -C "$VENV_PATH" .
    # Ask user if they want to verify the backup
    read -p "Do you want to verify the backup? (y/n): " verify_choice
    if [[ "$verify_choice" == "y" || "$verify_choice" == "Y" ]]; then
        echo "Verifying the backup integrity"
        tar --use-compress-program="zstd -d" -tf "$BACKUP_PATH"
        if [ $? -eq 0 ]; then
            echo "Backup and verification completed successfully."
        else
            echo "Backup verification failed!" >&2
            exit 1
        fi
    else
        echo "Backup completed without verification."
    fi
}
# Restore venv
restore_venv() {
    echo "Restoring $VENV_PATH from $BACKUP_PATH"
    # Ensure the venv directory exists
    mkdir -p "$VENV_PATH"
    # Restore and decompress venv with progress
    tar --use-compress-program="zstd -d --long=31" -xf "$BACKUP_PATH" -C "$VENV_PATH"
    echo "Restore completed successfully."
}
# Main function
main() {
    if [ "$1" == "backup" ]; then
        backup_venv
    elif [ "$1" == "restore" ]; then
        restore_venv
    else
        echo "Usage: $0 {backup|restore}"
        exit 1
    fi
}
main "$@"
</file>

<file path="base_image_src/scripts_base/start.sh">
#!/usr/bin/env bash
# ---------------------------------------------------------------------------- #
#                          Function Definitions                                #
# ---------------------------------------------------------------------------- #
# Check CUDA version using nvidia-smi
check_cuda_version() {
    echo "Checking CUDA version using nvidia-smi..."
    CURRENT_CUDA_VERSION=$(nvidia-smi | grep -oP "CUDA Version: \K[0-9.]+")
    # Check if the CUDA version was successfully extracted
    if [[ -z "${CURRENT_CUDA_VERSION}" ]];
    then
        echo "CUDA version not found. Make sure that CUDA is properly installed and 'nvidia-smi' is available."
        exit 1
    fi
    echo "Detected CUDA version using nvidia-smi: ${CURRENT_CUDA_VERSION}"
    # Split the version into major and minor for comparison
    IFS='.' read -r -a CURRENT_CUDA_VERSION_ARRAY <<< "${CURRENT_CUDA_VERSION}"
    CURRENT_CUDA_VERSION_MAJOR="${CURRENT_CUDA_VERSION_ARRAY[0]}"
    CURRENT_CUDA_VERSION_MINOR="${CURRENT_CUDA_VERSION_ARRAY[1]}"
    IFS='.' read -r -a REQUIRED_CUDA_VERSION_ARRAY <<< "${REQUIRED_CUDA_VERSION}"
    REQUIRED_CUDA_VERSION_MAJOR="${REQUIRED_CUDA_VERSION_ARRAY[0]}"
    REQUIRED_CUDA_VERSION_MINOR="${REQUIRED_CUDA_VERSION_ARRAY[1]}"
    # Compare the CUDA version with the required version
    if [[ "${CURRENT_CUDA_VERSION_MAJOR}" -lt "${REQUIRED_CUDA_VERSION_MAJOR}" ||
          ( "${CURRENT_CUDA_VERSION_MAJOR}" -eq "${REQUIRED_CUDA_VERSION_MAJOR}" && "${CURRENT_CUDA_VERSION_MINOR}" -lt "${REQUIRED_CUDA_VERSION_MINOR}" ) ]];
    then
        echo "Current CUDA version (${CURRENT_CUDA_VERSION}) is older than required (${REQUIRED_CUDA_VERSION})."
        echo "Please switch to a pod with CUDA version ${REQUIRED_CUDA_VERSION} or higher by selecting the appropriate filter on Pod deploy."
        exit 1
    else
        echo "CUDA version from nvidia-smi seems sufficient: ${CURRENT_CUDA_VERSION}"
    fi
}
# Simple CUDA functionality test using PyTorch
test_pytorch_cuda() {
    echo "Performing a simple CUDA functionality test using PyTorch..."
    python3 - <<END
import sys
import torch
try:
    # Check if CUDA is available
    if not torch.cuda.is_available():
        print("CUDA is not available on this system.")
        sys.exit(1)
    # Get the CUDA version
    cuda_version = torch.version.cuda
    if cuda_version is None:
        print("Could not determine CUDA version using PyTorch.")
        sys.exit(1)
    print(f"From PyTorch test, your CUDA version meets the requirement: {cuda_version}")
    # Test CUDA by getting device count
    num_gpus = torch.cuda.device_count()
    print(f"Number of CUDA-capable devices: {num_gpus}")
    # List CUDA-capable devices
    for i in range(num_gpus):
        print(f"Device {i}: {torch.cuda.get_device_name(i)}")
except RuntimeError as e:
    print(f"Runtime error: {e}")
    sys.exit(2)
except Exception as e:
    print(f"An unexpected error occurred: {e}")
    sys.exit(1)
END
    if [[ $? -ne 0 ]]; then
        echo "PyTorch CUDA test failed. Please switch to a pod with a proper CUDA setup."
        exit 1
    else
        echo "CUDA version is sufficient and functional."
    fi
}
start_nginx() {
    echo "NGINX: Starting Nginx service..."
    service nginx start
}
execute_script() {
    local script_path=$1
    local script_msg=$2
    if [[ -f ${script_path} ]]; then
        echo "${script_msg}"
        bash ${script_path}
    fi
}
generate_ssh_host_keys() {
    if [ ! -f /etc/ssh/ssh_host_rsa_key ]; then
        ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -q -N ''
    fi
    if [ ! -f /etc/ssh/ssh_host_dsa_key ]; then
        ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key -q -N ''
    fi
    if [ ! -f /etc/ssh/ssh_host_ecdsa_key ]; then
        ssh-keygen -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key -q -N ''
    fi
    if [ ! -f /etc/ssh/ssh_host_ed25519_key ]; then
        ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key -q -N ''
    fi
}
setup_ssh() {
    echo "SSH: Setting up SSH..."
    mkdir -p ~/.ssh
    # Add SSH public key from environment variable to ~/.ssh/authorized_keys
    # if the PUBLIC_KEY environment variable is set
    if [[ ${PUBLIC_KEY} ]]; then
        echo -e "${PUBLIC_KEY}\n" >> ~/.ssh/authorized_keys
    fi
    chmod 700 -R ~/.ssh
    # Generate SSH host keys if they don't exist
    generate_ssh_host_keys
    service ssh start
    echo "SSH: Host keys:"
    cat /etc/ssh/*.pub
}
export_env_vars() {
    echo "ENV: Exporting environment variables..."
    printenv | grep -E '^RUNPOD_|^PATH=|^_=' | awk -F = '{ print "export " $1 "=\"" $2 "\"" }' >> /etc/rp_environment
    echo 'source /etc/rp_environment' >> ~/.bashrc
}
start_jupyter() {
    # Default to not using a password
    JUPYTER_PASSWORD=""
    # Allow a password to be set by providing the JUPYTER_PASSWORD environment variable
    if [[ ${JUPYTER_LAB_PASSWORD} ]]; then
        JUPYTER_PASSWORD=${JUPYTER_LAB_PASSWORD}
    fi
    echo "JUPYTER: Starting Jupyter Lab..."
    mkdir -p /workspace/logs
    cd / && \
    nohup jupyter lab --allow-root \
      --no-browser \
      --port=8888 \
      --ip=* \
      --FileContentsManager.delete_to_trash=False \
      --ContentsManager.allow_hidden=True \
      --ServerApp.terminado_settings='{"shell_command":["/bin/bash"]}' \
      --ServerApp.token=${JUPYTER_PASSWORD} \
      --ServerApp.allow_origin=* \
      --ServerApp.preferred_dir=/workspace &> /workspace/logs/jupyter.log &
    echo "JUPYTER: Jupyter Lab started"
}
# Start Code Server
start_code_server() {
    echo "CODE-SERVER: Starting Code Server..."
    mkdir -p /workspace/logs
    nohup code-server \
        --bind-addr 0.0.0.0:7777 \
        --auth none \
        --enable-proposed-api true \
        --disable-telemetry \
        /workspace &> /workspace/logs/code-server.log &
    echo "CODE-SERVER: Code Server started"
}
start_runpod_uploader() {
    echo "RUNPOD-UPLOADER: Starting RunPod Uploader..."
    nohup /usr/local/bin/runpod-uploader &> /workspace/logs/runpod-uploader.log &
    echo "RUNPOD-UPLOADER: RunPod Uploader started"
}
configure_filezilla() {
    # Only proceed if there is a public IP
    if [[ ! -z "${RUNPOD_PUBLIC_IP}" ]]; then
        # Server information
        hostname="${RUNPOD_PUBLIC_IP}"
        port="${RUNPOD_TCP_PORT_22}"
        # Generate a random password
        password=$(openssl rand -base64 12)
        # Set the password for the root user
        echo "root:${password}" | chpasswd
        # Update SSH configuration
        ssh_config="/etc/ssh/sshd_config"
        # Enable PasswordAuthentication
        grep -q "^PasswordAuthentication" ${ssh_config} && \
          sed -i "s/^PasswordAuthentication.*/PasswordAuthentication yes/" ${ssh_config} || \
          echo "PasswordAuthentication yes" >> ${ssh_config}
        # Enable PermitRootLogin
        grep -q "^PermitRootLogin" ${ssh_config} && \
          sed -i "s/^PermitRootLogin.*/PermitRootLogin yes/" ${ssh_config} || \
          echo "PermitRootLogin yes" >> ${ssh_config}
        # Restart the SSH service
        service ssh restart
        # Create FileZilla XML configuration for SFTP
        filezilla_config_file="/workspace/filezilla_sftp_config.xml"
        cat > ${filezilla_config_file} << EOF
<?xml version="1.0" encoding="UTF-8"?>
<FileZilla3 version="3.66.1" platform="linux">
    <Servers>
        <Server>
            <Host>${hostname}</Host>
            <Port>${port}</Port>
            <Protocol>1</Protocol> <!-- 1 for SFTP -->
            <Type>0</Type>
            <User>root</User>
            <Pass encoding="base64">$(echo -n ${password} | base64)</Pass>
            <Logontype>1</Logontype> <!-- 1 for Normal logon type -->
            <EncodingType>Auto</EncodingType>
            <BypassProxy>0</BypassProxy>
            <Name>Generated Server</Name>
            <RemoteDir>/workspace</RemoteDir>
            <SyncBrowsing>0</SyncBrowsing>
            <DirectoryComparison>0</DirectoryComparison>
            <!-- Additional settings can be added here -->
        </Server>
    </Servers>
</FileZilla3>
EOF
        echo "FILEZILLA: FileZilla SFTP configuration file created at: ${filezilla_config_file}"
    else
        echo "FILEZILLA: RUNPOD_PUBLIC_IP is not set. Skipping FileZilla configuration."
    fi
}
update_rclone() {
    echo "RCLONE: Updating rclone..."
    rclone selfupdate
}
start_cron() {
    echo "CRON: Starting Cron service..."
    service cron start
}
check_python_version() {
    echo "PYTHON: Checking Python version..."
    python3 -V
}
# ---------------------------------------------------------------------------- #
#                               Main Program                                   #
# ---------------------------------------------------------------------------- #
echo "Container Started, configuration in progress..."
start_nginx
setup_ssh
start_cron
start_jupyter
start_code_server
#check_cuda_version
#test_pytorch_cuda
start_runpod_uploader
execute_script "/pre_start.sh" "PRE-START: Running pre-start script..."
configure_filezilla
update_rclone
check_python_version
export_env_vars
execute_script "/post_start.sh" "POST-START: Running post-start script..."
echo "Container is READY!"
sleep infinity
</file>

<file path="docker-bake.hcl">
// No seu docker-bake.hcl do comfyui-docker1

variable "REGISTRY" {
    default = "docker.io"
}

variable "REGISTRY_USER" {
    default = "redrawproarch" // Ou seu usuário
}

variable "APP" {
    default = "comfyui"
}

variable "RELEASE" {
    // Versão do seu app ComfyUI, não da imagem base
    default = "v0.3.33"
}

// Variáveis para construir a "base" dentro do Dockerfile
variable "NVIDIA_IMAGE_TAG" { // Ex: 12.1.1-cudnn8-devel-ubuntu22.04
    default = "12.1.1-cudnn8-devel-ubuntu22.04"
}
variable "PYTHON_VERSION_BASE" { // Python para a base
    default = "3.12"
}
variable "TORCH_VERSION_INSTALL" { // Torch para a base, ex: 2.5.1
    default = "2.5.1"
}
variable "CU_VERSION_SUFFIX" { // Versão CUDA para sufixo do Torch e INDEX_URL, ex: 121
    default = "121"
}
variable "XFORMERS_VERSION_INSTALL" { // Xformers para a base
    default = "0.0.29.post1"
}
variable "RUNPODCTL_VERSION_BASE" {
    default = "v1.14.4" // Verificar a última versão se necessário
}
variable "REQUIRED_CUDA_VERSION_START" { // Usado pelo start.sh da base
    default = "12.1"
}


target "default" {
    dockerfile = "Dockerfile"
    tags = ["${REGISTRY}/${REGISTRY_USER}/${APP}:${RELEASE}"]
    args = {
        // ARGS para a construção da base
        NVIDIA_IMAGE_TAG = "${NVIDIA_IMAGE_TAG}"
        PYTHON_VERSION_BASE = "${PYTHON_VERSION_BASE}"
        TORCH_VERSION_BASE = "${TORCH_VERSION_INSTALL}"
        CU_VERSION_BASE = "${CU_VERSION_SUFFIX}"
        INDEX_URL_BASE = "https://download.pytorch.org/whl/cu${CU_VERSION_SUFFIX}"
        XFORMERS_VERSION_BASE = "${XFORMERS_VERSION_INSTALL}"
        RUNPODCTL_VERSION_BASE = "${RUNPODCTL_VERSION_BASE}"
        REQUIRED_CUDA_VERSION_BASE = "${REQUIRED_CUDA_VERSION_START}"

        // Suas ARGS existentes para o ComfyUI
        // Cuidado para não conflitar nomes se forem diferentes em escopo/propósito
        RELEASE = "${RELEASE}" // Este é o release do ComfyUI app
        // BASE_IMAGE = ... <-- ESTA LINHA SERÁ REMOVIDA/ALTERADA
        // TORCH_VERSION = ... <-- Se for diferente da _BASE, precisará de um nome diferente ou ser a mesma
        // XFORMERS_VERSION = ... <-- Idem
        // INDEX_URL = ... <-- Idem
        COMFYUI_VERSION = "${RELEASE}" // Ou uma ARG específica COMFYUI_RELEASE
        APP_MANAGER_VERSION = "1.2.2"
        CIVITAI_DOWNLOADER_VERSION = "2.1.0"
        // COMFYUI_COMMIT = "seu_commit_hash" // Se você usa commit específico

        // Pass the same installation versions to ComfyUI's install script ARGs
        // Your install_comfyui.sh expects TORCH_VERSION, XFORMERS_VERSION, INDEX_URL
        TORCH_VERSION = "${TORCH_VERSION_INSTALL}+cu${CU_VERSION_SUFFIX}" // Full version string for pip
        XFORMERS_VERSION = "${XFORMERS_VERSION_INSTALL}"
        INDEX_URL = "https://download.pytorch.org/whl/cu${CU_VERSION_SUFFIX}"
    }
    platforms = ["linux/amd64"]
}
</file>

<file path="Dockerfile">
ARG NVIDIA_IMAGE_TAG="12.1.1-cudnn8-devel-ubuntu22.04"
FROM nvidia/cuda:${NVIDIA_IMAGE_TAG}

SHELL ["/bin/bash", "-o", "pipefail", "-c"]
ENV DEBIAN_FRONTEND=noninteractive \
    TZ=Europe/London \
    PYTHONUNBUFFERED=1 \
    SHELL=/bin/bash

# --- BEGIN INTERNALIZED BASE IMAGE CONSTRUCTION ---

ARG PYTHON_VERSION_BASE
ARG TORCH_VERSION_BASE # Format X.Y.Z, e.g., 2.5.1
ARG CU_VERSION_BASE    # Format XYZ, e.g., 121
ARG INDEX_URL_BASE
ARG XFORMERS_VERSION_BASE
ARG RUNPODCTL_VERSION_BASE
ARG REQUIRED_CUDA_VERSION_BASE

# 1. Install Ubuntu packages (packages.sh)
COPY base_image_src/build_base/packages.sh /packages.sh
RUN chmod +x /packages.sh && \
    env PYTHON_VERSION=${PYTHON_VERSION_BASE} /packages.sh && \
    rm /packages.sh

# 2. Install Torch and xformers for the base
RUN pip3 install --no-cache-dir torch==${TORCH_VERSION_BASE}+cu${CU_VERSION_BASE} torchvision torchaudio --index-url ${INDEX_URL_BASE} && \
    pip3 install --no-cache-dir xformers==${XFORMERS_VERSION_BASE} --index-url ${INDEX_URL_BASE}

# 3. Install applications (apps.sh)
COPY base_image_src/code_server_base/vsix/*.vsix /tmp/
COPY base_image_src/code_server_base/settings.json /root/.local/share/code-server/User/settings.json
COPY base_image_src/build_base/apps.sh /apps.sh
RUN chmod +x /apps.sh && \
    env RUNPODCTL_VERSION=${RUNPODCTL_VERSION_BASE} /apps.sh && \
    rm /apps.sh

# 4. NGINX Proxy file from base
COPY base_image_src/nginx_base/502.html /usr/share/nginx/html/502.html

# 5. Copy base utility scripts and setup
WORKDIR /
COPY --chmod=755 base_image_src/scripts_base/* /scripts_base/
RUN mv /scripts_base/manage_venv.sh /usr/local/bin/manage_venv

# 6. Remove existing SSH host keys (as in the original base Dockerfile)
RUN rm -f /etc/ssh/ssh_host_*

# 7. Set REQUIRED_CUDA_VERSION for the base's start.sh
ENV REQUIRED_CUDA_VERSION=${REQUIRED_CUDA_VERSION_BASE}

# Make COMFYUI_VERSION available as an environment variable for runtime scripts
ARG COMFYUI_VERSION
ENV COMFYUI_VERSION=${COMFYUI_VERSION}

# Make Torch/Xformers related ARGS also available as ENVs for pre_start.sh
ARG TORCH_VERSION
ENV TORCH_VERSION=${TORCH_VERSION}
ARG XFORMERS_VERSION
ENV XFORMERS_VERSION=${XFORMERS_VERSION}
ARG INDEX_URL
ENV INDEX_URL=${INDEX_URL}

# --- END INTERNALIZED BASE IMAGE CONSTRUCTION ---

# --- BEGIN YOUR COMFYUI SPECIFIC SETUP ---
WORKDIR /
# Copy your ComfyUI build scripts AND the post_start.sh
COPY --chmod=755 build/* ./
COPY --chmod=755 post_start.sh ./
COPY --chmod=755 scripts/pre_start.sh /pre_start.sh

# Install ComfyUI -- THIS SECTION WILL BE REMOVED/COMMENTED
# # These ARGs (TORCH_VERSION, XFORMERS_VERSION, INDEX_URL) are now passed from docker-bake.hcl,
# # sourced from TORCH_VERSION_INSTALL and CU_VERSION_SUFFIX.
# ARG TORCH_VERSION
# ARG XFORMERS_VERSION
# ARG INDEX_URL
# ARG COMFYUI_COMMIT
# ARG COMFYUI_VERSION
# RUN /install_comfyui.sh 

# Install Application Manager
ARG APP_MANAGER_VERSION
RUN /install_app_manager.sh
COPY app-manager/config.json /app-manager/public/config.json
COPY --chmod=755 app-manager/*.sh /app-manager/scripts/

# Install CivitAI Model Downloader
ARG CIVITAI_DOWNLOADER_VERSION
RUN /install_civitai_model_downloader.sh

# Cleanup installation scripts (ComfyUI specific ones)
RUN rm -f /install_comfyui.sh /install_app_manager.sh /install_civitai_model_downloader.sh

# NGINX Proxy (Your main NGINX config for ComfyUI)
COPY nginx/nginx.conf /etc/nginx/nginx.conf

# Set template version (your application's version)
ARG RELEASE
ENV TEMPLATE_VERSION=${RELEASE}

# VENV_PATH is not explicitly set here as the base scripts manage /venv
# If ComfyUI needs a *separate* venv, that needs to be handled.

# COPY --chmod=755 scripts/* ./  -- This line is now removed/commented.
# Ensure this doesn't overwrite /scripts_base or essential files if your `scripts` dir has conflicting names

# Start the container using the base image's start.sh
SHELL ["/bin/bash", "--login", "-c"]
CMD [ "/scripts_base/start.sh" ]
</file>

<file path="LICENSE">
GNU GENERAL PUBLIC LICENSE
                       Version 3, 29 June 2007

 Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>
 Everyone is permitted to copy and distribute verbatim copies
 of this license document, but changing it is not allowed.

                            Preamble

  The GNU General Public License is a free, copyleft license for
software and other kinds of works.

  The licenses for most software and other practical works are designed
to take away your freedom to share and change the works.  By contrast,
the GNU General Public License is intended to guarantee your freedom to
share and change all versions of a program--to make sure it remains free
software for all its users.  We, the Free Software Foundation, use the
GNU General Public License for most of our software; it applies also to
any other work released this way by its authors.  You can apply it to
your programs, too.

  When we speak of free software, we are referring to freedom, not
price.  Our General Public Licenses are designed to make sure that you
have the freedom to distribute copies of free software (and charge for
them if you wish), that you receive source code or can get it if you
want it, that you can change the software or use pieces of it in new
free programs, and that you know you can do these things.

  To protect your rights, we need to prevent others from denying you
these rights or asking you to surrender the rights.  Therefore, you have
certain responsibilities if you distribute copies of the software, or if
you modify it: responsibilities to respect the freedom of others.

  For example, if you distribute copies of such a program, whether
gratis or for a fee, you must pass on to the recipients the same
freedoms that you received.  You must make sure that they, too, receive
or can get the source code.  And you must show them these terms so they
know their rights.

  Developers that use the GNU GPL protect your rights with two steps:
(1) assert copyright on the software, and (2) offer you this License
giving you legal permission to copy, distribute and/or modify it.

  For the developers' and authors' protection, the GPL clearly explains
that there is no warranty for this free software.  For both users' and
authors' sake, the GPL requires that modified versions be marked as
changed, so that their problems will not be attributed erroneously to
authors of previous versions.

  Some devices are designed to deny users access to install or run
modified versions of the software inside them, although the manufacturer
can do so.  This is fundamentally incompatible with the aim of
protecting users' freedom to change the software.  The systematic
pattern of such abuse occurs in the area of products for individuals to
use, which is precisely where it is most unacceptable.  Therefore, we
have designed this version of the GPL to prohibit the practice for those
products.  If such problems arise substantially in other domains, we
stand ready to extend this provision to those domains in future versions
of the GPL, as needed to protect the freedom of users.

  Finally, every program is threatened constantly by software patents.
States should not allow patents to restrict development and use of
software on general-purpose computers, but in those that do, we wish to
avoid the special danger that patents applied to a free program could
make it effectively proprietary.  To prevent this, the GPL assures that
patents cannot be used to render the program non-free.

  The precise terms and conditions for copying, distribution and
modification follow.

                       TERMS AND CONDITIONS

  0. Definitions.

  "This License" refers to version 3 of the GNU General Public License.

  "Copyright" also means copyright-like laws that apply to other kinds of
works, such as semiconductor masks.

  "The Program" refers to any copyrightable work licensed under this
License.  Each licensee is addressed as "you".  "Licensees" and
"recipients" may be individuals or organizations.

  To "modify" a work means to copy from or adapt all or part of the work
in a fashion requiring copyright permission, other than the making of an
exact copy.  The resulting work is called a "modified version" of the
earlier work or a work "based on" the earlier work.

  A "covered work" means either the unmodified Program or a work based
on the Program.

  To "propagate" a work means to do anything with it that, without
permission, would make you directly or secondarily liable for
infringement under applicable copyright law, except executing it on a
computer or modifying a private copy.  Propagation includes copying,
distribution (with or without modification), making available to the
public, and in some countries other activities as well.

  To "convey" a work means any kind of propagation that enables other
parties to make or receive copies.  Mere interaction with a user through
a computer network, with no transfer of a copy, is not conveying.

  An interactive user interface displays "Appropriate Legal Notices"
to the extent that it includes a convenient and prominently visible
feature that (1) displays an appropriate copyright notice, and (2)
tells the user that there is no warranty for the work (except to the
extent that warranties are provided), that licensees may convey the
work under this License, and how to view a copy of this License.  If
the interface presents a list of user commands or options, such as a
menu, a prominent item in the list meets this criterion.

  1. Source Code.

  The "source code" for a work means the preferred form of the work
for making modifications to it.  "Object code" means any non-source
form of a work.

  A "Standard Interface" means an interface that either is an official
standard defined by a recognized standards body, or, in the case of
interfaces specified for a particular programming language, one that
is widely used among developers working in that language.

  The "System Libraries" of an executable work include anything, other
than the work as a whole, that (a) is included in the normal form of
packaging a Major Component, but which is not part of that Major
Component, and (b) serves only to enable use of the work with that
Major Component, or to implement a Standard Interface for which an
implementation is available to the public in source code form.  A
"Major Component", in this context, means a major essential component
(kernel, window system, and so on) of the specific operating system
(if any) on which the executable work runs, or a compiler used to
produce the work, or an object code interpreter used to run it.

  The "Corresponding Source" for a work in object code form means all
the source code needed to generate, install, and (for an executable
work) run the object code and to modify the work, including scripts to
control those activities.  However, it does not include the work's
System Libraries, or general-purpose tools or generally available free
programs which are used unmodified in performing those activities but
which are not part of the work.  For example, Corresponding Source
includes interface definition files associated with source files for
the work, and the source code for shared libraries and dynamically
linked subprograms that the work is specifically designed to require,
such as by intimate data communication or control flow between those
subprograms and other parts of the work.

  The Corresponding Source need not include anything that users
can regenerate automatically from other parts of the Corresponding
Source.

  The Corresponding Source for a work in source code form is that
same work.

  2. Basic Permissions.

  All rights granted under this License are granted for the term of
copyright on the Program, and are irrevocable provided the stated
conditions are met.  This License explicitly affirms your unlimited
permission to run the unmodified Program.  The output from running a
covered work is covered by this License only if the output, given its
content, constitutes a covered work.  This License acknowledges your
rights of fair use or other equivalent, as provided by copyright law.

  You may make, run and propagate covered works that you do not
convey, without conditions so long as your license otherwise remains
in force.  You may convey covered works to others for the sole purpose
of having them make modifications exclusively for you, or provide you
with facilities for running those works, provided that you comply with
the terms of this License in conveying all material for which you do
not control copyright.  Those thus making or running the covered works
for you must do so exclusively on your behalf, under your direction
and control, on terms that prohibit them from making any copies of
your copyrighted material outside their relationship with you.

  Conveying under any other circumstances is permitted solely under
the conditions stated below.  Sublicensing is not allowed; section 10
makes it unnecessary.

  3. Protecting Users' Legal Rights From Anti-Circumvention Law.

  No covered work shall be deemed part of an effective technological
measure under any applicable law fulfilling obligations under article
11 of the WIPO copyright treaty adopted on 20 December 1996, or
similar laws prohibiting or restricting circumvention of such
measures.

  When you convey a covered work, you waive any legal power to forbid
circumvention of technological measures to the extent such circumvention
is effected by exercising rights under this License with respect to
the covered work, and you disclaim any intention to limit operation or
modification of the work as a means of enforcing, against the work's
users, your or third parties' legal rights to forbid circumvention of
technological measures.

  4. Conveying Verbatim Copies.

  You may convey verbatim copies of the Program's source code as you
receive it, in any medium, provided that you conspicuously and
appropriately publish on each copy an appropriate copyright notice;
keep intact all notices stating that this License and any
non-permissive terms added in accord with section 7 apply to the code;
keep intact all notices of the absence of any warranty; and give all
recipients a copy of this License along with the Program.

  You may charge any price or no price for each copy that you convey,
and you may offer support or warranty protection for a fee.

  5. Conveying Modified Source Versions.

  You may convey a work based on the Program, or the modifications to
produce it from the Program, in the form of source code under the
terms of section 4, provided that you also meet all of these conditions:

    a) The work must carry prominent notices stating that you modified
    it, and giving a relevant date.

    b) The work must carry prominent notices stating that it is
    released under this License and any conditions added under section
    7.  This requirement modifies the requirement in section 4 to
    "keep intact all notices".

    c) You must license the entire work, as a whole, under this
    License to anyone who comes into possession of a copy.  This
    License will therefore apply, along with any applicable section 7
    additional terms, to the whole of the work, and all its parts,
    regardless of how they are packaged.  This License gives no
    permission to license the work in any other way, but it does not
    invalidate such permission if you have separately received it.

    d) If the work has interactive user interfaces, each must display
    Appropriate Legal Notices; however, if the Program has interactive
    interfaces that do not display Appropriate Legal Notices, your
    work need not make them do so.

  A compilation of a covered work with other separate and independent
works, which are not by their nature extensions of the covered work,
and which are not combined with it such as to form a larger program,
in or on a volume of a storage or distribution medium, is called an
"aggregate" if the compilation and its resulting copyright are not
used to limit the access or legal rights of the compilation's users
beyond what the individual works permit.  Inclusion of a covered work
in an aggregate does not cause this License to apply to the other
parts of the aggregate.

  6. Conveying Non-Source Forms.

  You may convey a covered work in object code form under the terms
of sections 4 and 5, provided that you also convey the
machine-readable Corresponding Source under the terms of this License,
in one of these ways:

    a) Convey the object code in, or embodied in, a physical product
    (including a physical distribution medium), accompanied by the
    Corresponding Source fixed on a durable physical medium
    customarily used for software interchange.

    b) Convey the object code in, or embodied in, a physical product
    (including a physical distribution medium), accompanied by a
    written offer, valid for at least three years and valid for as
    long as you offer spare parts or customer support for that product
    model, to give anyone who possesses the object code either (1) a
    copy of the Corresponding Source for all the software in the
    product that is covered by this License, on a durable physical
    medium customarily used for software interchange, for a price no
    more than your reasonable cost of physically performing this
    conveying of source, or (2) access to copy the
    Corresponding Source from a network server at no charge.

    c) Convey individual copies of the object code with a copy of the
    written offer to provide the Corresponding Source.  This
    alternative is allowed only occasionally and noncommercially, and
    only if you received the object code with such an offer, in accord
    with subsection 6b.

    d) Convey the object code by offering access from a designated
    place (gratis or for a charge), and offer equivalent access to the
    Corresponding Source in the same way through the same place at no
    further charge.  You need not require recipients to copy the
    Corresponding Source along with the object code.  If the place to
    copy the object code is a network server, the Corresponding Source
    may be on a different server (operated by you or a third party)
    that supports equivalent copying facilities, provided you maintain
    clear directions next to the object code saying where to find the
    Corresponding Source.  Regardless of what server hosts the
    Corresponding Source, you remain obligated to ensure that it is
    available for as long as needed to satisfy these requirements.

    e) Convey the object code using peer-to-peer transmission, provided
    you inform other peers where the object code and Corresponding
    Source of the work are being offered to the general public at no
    charge under subsection 6d.

  A separable portion of the object code, whose source code is excluded
from the Corresponding Source as a System Library, need not be
included in conveying the object code work.

  A "User Product" is either (1) a "consumer product", which means any
tangible personal property which is normally used for personal, family,
or household purposes, or (2) anything designed or sold for incorporation
into a dwelling.  In determining whether a product is a consumer product,
doubtful cases shall be resolved in favor of coverage.  For a particular
product received by a particular user, "normally used" refers to a
typical or common use of that class of product, regardless of the status
of the particular user or of the way in which the particular user
actually uses, or expects or is expected to use, the product.  A product
is a consumer product regardless of whether the product has substantial
commercial, industrial or non-consumer uses, unless such uses represent
the only significant mode of use of the product.

  "Installation Information" for a User Product means any methods,
procedures, authorization keys, or other information required to install
and execute modified versions of a covered work in that User Product from
a modified version of its Corresponding Source.  The information must
suffice to ensure that the continued functioning of the modified object
code is in no case prevented or interfered with solely because
modification has been made.

  If you convey an object code work under this section in, or with, or
specifically for use in, a User Product, and the conveying occurs as
part of a transaction in which the right of possession and use of the
User Product is transferred to the recipient in perpetuity or for a
fixed term (regardless of how the transaction is characterized), the
Corresponding Source conveyed under this section must be accompanied
by the Installation Information.  But this requirement does not apply
if neither you nor any third party retains the ability to install
modified object code on the User Product (for example, the work has
been installed in ROM).

  The requirement to provide Installation Information does not include a
requirement to continue to provide support service, warranty, or updates
for a work that has been modified or installed by the recipient, or for
the User Product in which it has been modified or installed.  Access to a
network may be denied when the modification itself materially and
adversely affects the operation of the network or violates the rules and
protocols for communication across the network.

  Corresponding Source conveyed, and Installation Information provided,
in accord with this section must be in a format that is publicly
documented (and with an implementation available to the public in
source code form), and must require no special password or key for
unpacking, reading or copying.

  7. Additional Terms.

  "Additional permissions" are terms that supplement the terms of this
License by making exceptions from one or more of its conditions.
Additional permissions that are applicable to the entire Program shall
be treated as though they were included in this License, to the extent
that they are valid under applicable law.  If additional permissions
apply only to part of the Program, that part may be used separately
under those permissions, but the entire Program remains governed by
this License without regard to the additional permissions.

  When you convey a copy of a covered work, you may at your option
remove any additional permissions from that copy, or from any part of
it.  (Additional permissions may be written to require their own
removal in certain cases when you modify the work.)  You may place
additional permissions on material, added by you to a covered work,
for which you have or can give appropriate copyright permission.

  Notwithstanding any other provision of this License, for material you
add to a covered work, you may (if authorized by the copyright holders of
that material) supplement the terms of this License with terms:

    a) Disclaiming warranty or limiting liability differently from the
    terms of sections 15 and 16 of this License; or

    b) Requiring preservation of specified reasonable legal notices or
    author attributions in that material or in the Appropriate Legal
    Notices displayed by works containing it; or

    c) Prohibiting misrepresentation of the origin of that material, or
    requiring that modified versions of such material be marked in
    reasonable ways as different from the original version; or

    d) Limiting the use for publicity purposes of names of licensors or
    authors of the material; or

    e) Declining to grant rights under trademark law for use of some
    trade names, trademarks, or service marks; or

    f) Requiring indemnification of licensors and authors of that
    material by anyone who conveys the material (or modified versions of
    it) with contractual assumptions of liability to the recipient, for
    any liability that these contractual assumptions directly impose on
    those licensors and authors.

  All other non-permissive additional terms are considered "further
restrictions" within the meaning of section 10.  If the Program as you
received it, or any part of it, contains a notice stating that it is
governed by this License along with a term that is a further
restriction, you may remove that term.  If a license document contains
a further restriction but permits relicensing or conveying under this
License, you may add to a covered work material governed by the terms
of that license document, provided that the further restriction does
not survive such relicensing or conveying.

  If you add terms to a covered work in accord with this section, you
must place, in the relevant source files, a statement of the
additional terms that apply to those files, or a notice indicating
where to find the applicable terms.

  Additional terms, permissive or non-permissive, may be stated in the
form of a separately written license, or stated as exceptions;
the above requirements apply either way.

  8. Termination.

  You may not propagate or modify a covered work except as expressly
provided under this License.  Any attempt otherwise to propagate or
modify it is void, and will automatically terminate your rights under
this License (including any patent licenses granted under the third
paragraph of section 11).

  However, if you cease all violation of this License, then your
license from a particular copyright holder is reinstated (a)
provisionally, unless and until the copyright holder explicitly and
finally terminates your license, and (b) permanently, if the copyright
holder fails to notify you of the violation by some reasonable means
prior to 60 days after the cessation.

  Moreover, your license from a particular copyright holder is
reinstated permanently if the copyright holder notifies you of the
violation by some reasonable means, this is the first time you have
received notice of violation of this License (for any work) from that
copyright holder, and you cure the violation prior to 30 days after
your receipt of the notice.

  Termination of your rights under this section does not terminate the
licenses of parties who have received copies or rights from you under
this License.  If your rights have been terminated and not permanently
reinstated, you do not qualify to receive new licenses for the same
material under section 10.

  9. Acceptance Not Required for Having Copies.

  You are not required to accept this License in order to receive or
run a copy of the Program.  Ancillary propagation of a covered work
occurring solely as a consequence of using peer-to-peer transmission
to receive a copy likewise does not require acceptance.  However,
nothing other than this License grants you permission to propagate or
modify any covered work.  These actions infringe copyright if you do
not accept this License.  Therefore, by modifying or propagating a
covered work, you indicate your acceptance of this License to do so.

  10. Automatic Licensing of Downstream Recipients.

  Each time you convey a covered work, the recipient automatically
receives a license from the original licensors, to run, modify and
propagate that work, subject to this License.  You are not responsible
for enforcing compliance by third parties with this License.

  An "entity transaction" is a transaction transferring control of an
organization, or substantially all assets of one, or subdividing an
organization, or merging organizations.  If propagation of a covered
work results from an entity transaction, each party to that
transaction who receives a copy of the work also receives whatever
licenses to the work the party's predecessor in interest had or could
give under the previous paragraph, plus a right to possession of the
Corresponding Source of the work from the predecessor in interest, if
the predecessor has it or can get it with reasonable efforts.

  You may not impose any further restrictions on the exercise of the
rights granted or affirmed under this License.  For example, you may
not impose a license fee, royalty, or other charge for exercise of
rights granted under this License, and you may not initiate litigation
(including a cross-claim or counterclaim in a lawsuit) alleging that
any patent claim is infringed by making, using, selling, offering for
sale, or importing the Program or any portion of it.

  11. Patents.

  A "contributor" is a copyright holder who authorizes use under this
License of the Program or a work on which the Program is based.  The
work thus licensed is called the contributor's "contributor version".

  A contributor's "essential patent claims" are all patent claims
owned or controlled by the contributor, whether already acquired or
hereafter acquired, that would be infringed by some manner, permitted
by this License, of making, using, or selling its contributor version,
but do not include claims that would be infringed only as a
consequence of further modification of the contributor version.  For
purposes of this definition, "control" includes the right to grant
patent sublicenses in a manner consistent with the requirements of
this License.

  Each contributor grants you a non-exclusive, worldwide, royalty-free
patent license under the contributor's essential patent claims, to
make, use, sell, offer for sale, import and otherwise run, modify and
propagate the contents of its contributor version.

  In the following three paragraphs, a "patent license" is any express
agreement or commitment, however denominated, not to enforce a patent
(such as an express permission to practice a patent or covenant not to
sue for patent infringement).  To "grant" such a patent license to a
party means to make such an agreement or commitment not to enforce a
patent against the party.

  If you convey a covered work, knowingly relying on a patent license,
and the Corresponding Source of the work is not available for anyone
to copy, free of charge and under the terms of this License, through a
publicly available network server or other readily accessible means,
then you must either (1) cause the Corresponding Source to be so
available, or (2) arrange to deprive yourself of the benefit of the
patent license for this particular work, or (3) arrange, in a manner
consistent with the requirements of this License, to extend the patent
license to downstream recipients.  "Knowingly relying" means you have
actual knowledge that, but for the patent license, your conveying the
covered work in a country, or your recipient's use of the covered work
in a country, would infringe one or more identifiable patents in that
country that you have reason to believe are valid.

  If, pursuant to or in connection with a single transaction or
arrangement, you convey, or propagate by procuring conveyance of, a
covered work, and grant a patent license to some of the parties
receiving the covered work authorizing them to use, propagate, modify
or convey a specific copy of the covered work, then the patent license
you grant is automatically extended to all recipients of the covered
work and works based on it.

  A patent license is "discriminatory" if it does not include within
the scope of its coverage, prohibits the exercise of, or is
conditioned on the non-exercise of one or more of the rights that are
specifically granted under this License.  You may not convey a covered
work if you are a party to an arrangement with a third party that is
in the business of distributing software, under which you make payment
to the third party based on the extent of your activity of conveying
the work, and under which the third party grants, to any of the
parties who would receive the covered work from you, a discriminatory
patent license (a) in connection with copies of the covered work
conveyed by you (or copies made from those copies), or (b) primarily
for and in connection with specific products or compilations that
contain the covered work, unless you entered into that arrangement,
or that patent license was granted, prior to 28 March 2007.

  Nothing in this License shall be construed as excluding or limiting
any implied license or other defenses to infringement that may
otherwise be available to you under applicable patent law.

  12. No Surrender of Others' Freedom.

  If conditions are imposed on you (whether by court order, agreement or
otherwise) that contradict the conditions of this License, they do not
excuse you from the conditions of this License.  If you cannot convey a
covered work so as to satisfy simultaneously your obligations under this
License and any other pertinent obligations, then as a consequence you may
not convey it at all.  For example, if you agree to terms that obligate you
to collect a royalty for further conveying from those to whom you convey
the Program, the only way you could satisfy both those terms and this
License would be to refrain entirely from conveying the Program.

  13. Use with the GNU Affero General Public License.

  Notwithstanding any other provision of this License, you have
permission to link or combine any covered work with a work licensed
under version 3 of the GNU Affero General Public License into a single
combined work, and to convey the resulting work.  The terms of this
License will continue to apply to the part which is the covered work,
but the special requirements of the GNU Affero General Public License,
section 13, concerning interaction through a network will apply to the
combination as such.

  14. Revised Versions of this License.

  The Free Software Foundation may publish revised and/or new versions of
the GNU General Public License from time to time.  Such new versions will
be similar in spirit to the present version, but may differ in detail to
address new problems or concerns.

  Each version is given a distinguishing version number.  If the
Program specifies that a certain numbered version of the GNU General
Public License "or any later version" applies to it, you have the
option of following the terms and conditions either of that numbered
version or of any later version published by the Free Software
Foundation.  If the Program does not specify a version number of the
GNU General Public License, you may choose any version ever published
by the Free Software Foundation.

  If the Program specifies that a proxy can decide which future
versions of the GNU General Public License can be used, that proxy's
public statement of acceptance of a version permanently authorizes you
to choose that version for the Program.

  Later license versions may give you additional or different
permissions.  However, no additional obligations are imposed on any
author or copyright holder as a result of your choosing to follow a
later version.

  15. Disclaimer of Warranty.

  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY
APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT
HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY
OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM
IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF
ALL NECESSARY SERVICING, REPAIR OR CORRECTION.

  16. Limitation of Liability.

  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS
THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY
GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE
USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF
DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD
PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),
EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF
SUCH DAMAGES.

  17. Interpretation of Sections 15 and 16.

  If the disclaimer of warranty and limitation of liability provided
above cannot be given local legal effect according to their terms,
reviewing courts shall apply local law that most closely approximates
an absolute waiver of all civil liability in connection with the
Program, unless a warranty or assumption of liability accompanies a
copy of the Program in return for a fee.

                     END OF TERMS AND CONDITIONS

            How to Apply These Terms to Your New Programs

  If you develop a new program, and you want it to be of the greatest
possible use to the public, the best way to achieve this is to make it
free software which everyone can redistribute and change under these terms.

  To do so, attach the following notices to the program.  It is safest
to attach them to the start of each source file to most effectively
state the exclusion of warranty; and each file should have at least
the "copyright" line and a pointer to where the full notice is found.

    <one line to give the program's name and a brief idea of what it does.>
    Copyright (C) <year>  <name of author>

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <https://www.gnu.org/licenses/>.

Also add information on how to contact you by electronic and paper mail.

  If the program does terminal interaction, make it output a short
notice like this when it starts in an interactive mode:

    <program>  Copyright (C) <year>  <name of author>
    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
    This is free software, and you are welcome to redistribute it
    under certain conditions; type `show c' for details.

The hypothetical commands `show w' and `show c' should show the appropriate
parts of the General Public License.  Of course, your program's commands
might be different; for a GUI interface, you would use an "about box".

  You should also get your employer (if you work as a programmer) or school,
if any, to sign a "copyright disclaimer" for the program, if necessary.
For more information on this, and how to apply and follow the GNU GPL, see
<https://www.gnu.org/licenses/>.

  The GNU General Public License does not permit incorporating your program
into proprietary programs.  If your program is a subroutine library, you
may consider it more useful to permit linking proprietary applications with
the library.  If this is what you want to do, use the GNU Lesser General
Public License instead of this License.  But first, please read
<https://www.gnu.org/licenses/why-not-lgpl.html>.
</file>

<file path="log-build.txt">
C:\Users\sergi\Desktop\codigos\templates\comfyui-docker1>docker buildx bake --progress=plain --set default.args.RELEASE=debug --set default.tags=comfy-debug:latest
#0 building with "silly_newton" instance using docker-container driver

#1 [internal] load local bake definitions
#1 reading docker-bake.hcl 1.17kB / 1.17kB done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.02kB done
#2 WARN: InvalidDefaultArgInFrom: Default value for ARG ${BASE_IMAGE} results in empty or invalid base image name (line 2)
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/ashleykza/runpod-base:2.4.2-python3.12-cuda12.4.1-torch2.6.0
#3 ...

#4 [auth] ashleykza/runpod-base:pull token for registry-1.docker.io
#4 DONE 0.0s

#3 [internal] load metadata for docker.io/ashleykza/runpod-base:2.4.2-python3.12-cuda12.4.1-torch2.6.0
#3 DONE 2.5s

#5 [internal] load .dockerignore
#5 transferring context: 2B done
#5 DONE 0.0s

#6 [internal] load build context
#6 transferring context: 10.00kB 0.0s done
#6 DONE 0.0s

#7 [ 1/13] FROM docker.io/ashleykza/runpod-base:2.4.2-python3.12-cuda12.4.1-torch2.6.0@sha256:e4fc41c3b1d92bc5ad330069e173b3838f642ebe017207eddc84dc58519e6c34
#7 resolve docker.io/ashleykza/runpod-base:2.4.2-python3.12-cuda12.4.1-torch2.6.0@sha256:e4fc41c3b1d92bc5ad330069e173b3838f642ebe017207eddc84dc58519e6c34 0.0s done
#7 DONE 0.3s

#7 [ 1/13] FROM docker.io/ashleykza/runpod-base:2.4.2-python3.12-cuda12.4.1-torch2.6.0@sha256:e4fc41c3b1d92bc5ad330069e173b3838f642ebe017207eddc84dc58519e6c34
#7 sha256:a957f94a54529561faa41771a2e449b5298d7c2170f655f4d1bc9d12f2a754cc 0B / 975B 0.2s
#7 sha256:7971bf47b68069ee6185c0efe67ed73f2a8d55ddf008e124a3b4bdc03f3ba013 0B / 4.13kB 0.2s
#7 sha256:1b773990fae1f413b3a9e447efbd4638254822a00b2e50fcd4e72b9ac0d63a76 0B / 1.12kB 0.2s
#7 sha256:fa29877684af4577b41750e81cc854e2b9c9360f947e4b95c974accad5cb8292 0B / 238B 0.2s
#7 sha256:a957f94a54529561faa41771a2e449b5298d7c2170f655f4d1bc9d12f2a754cc 975B / 975B 0.4s done
#7 sha256:7971bf47b68069ee6185c0efe67ed73f2a8d55ddf008e124a3b4bdc03f3ba013 4.13kB / 4.13kB 0.6s done
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 0B / 451.97MB 0.2s
#7 sha256:106561ca9d37bf6acd461c0c5a409c0371628d1d4e6d13856b3bb7b45536097e 0B / 721B 0.2s
#7 sha256:1b773990fae1f413b3a9e447efbd4638254822a00b2e50fcd4e72b9ac0d63a76 1.12kB / 1.12kB 0.8s done
#7 sha256:fa29877684af4577b41750e81cc854e2b9c9360f947e4b95c974accad5cb8292 238B / 238B 0.9s done
#7 sha256:106561ca9d37bf6acd461c0c5a409c0371628d1d4e6d13856b3bb7b45536097e 721B / 721B 0.4s done
#7 sha256:17919fa24e1fe2eb109dbb1086f82b90c0bd097b50031a8df86b61a788a9f4cf 0B / 507B 0.2s
#7 sha256:1c9ae54463800595519da3cd4f4edd93c65be533962cc0585bf7402875f4b169 0B / 1.78MB 0.2s
#7 sha256:17919fa24e1fe2eb109dbb1086f82b90c0bd097b50031a8df86b61a788a9f4cf 507B / 507B 0.4s done
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 0B / 3.10GB 0.2s
#7 sha256:1c9ae54463800595519da3cd4f4edd93c65be533962cc0585bf7402875f4b169 1.78MB / 1.78MB 1.1s done
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 25.17MB / 451.97MB 2.6s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 50.33MB / 451.97MB 4.8s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 61.87MB / 3.10GB 5.3s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 65.01MB / 451.97MB 9.9s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 91.23MB / 3.10GB 10.4s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 66.06MB / 451.97MB 15.0s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 92.27MB / 3.10GB 15.4s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 66.06MB / 451.97MB 20.1s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 93.32MB / 3.10GB 20.6s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 66.06MB / 451.97MB 25.2s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 93.32MB / 3.10GB 25.6s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 66.06MB / 451.97MB 30.3s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 93.32MB / 3.10GB 30.7s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 66.06MB / 451.97MB 35.4s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 93.32MB / 3.10GB 35.8s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 66.06MB / 451.97MB 40.5s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 93.32MB / 3.10GB 40.9s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 66.06MB / 451.97MB 45.6s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 93.32MB / 3.10GB 46.0s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 66.06MB / 451.97MB 50.7s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 93.32MB / 3.10GB 51.1s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 67.11MB / 451.97MB 55.8s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 93.32MB / 3.10GB 56.2s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 67.11MB / 451.97MB 60.9s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 93.32MB / 3.10GB 61.3s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 67.11MB / 451.97MB 66.0s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 93.32MB / 3.10GB 66.4s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 67.11MB / 451.97MB 71.1s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 93.32MB / 3.10GB 71.5s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 67.11MB / 451.97MB 76.2s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 93.32MB / 3.10GB 76.6s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 67.11MB / 451.97MB 81.3s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 93.32MB / 3.10GB 81.7s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 67.11MB / 451.97MB 86.4s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 93.32MB / 3.10GB 86.8s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 67.11MB / 451.97MB 91.5s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 93.32MB / 3.10GB 91.9s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 67.11MB / 451.97MB 96.6s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 93.32MB / 3.10GB 97.0s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 67.11MB / 451.97MB 101.7s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 94.37MB / 3.10GB 102.1s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 92.27MB / 451.97MB 105.0s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 119.54MB / 451.97MB 106.3s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 94.37MB / 3.10GB 107.2s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 130.02MB / 451.97MB 111.4s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 94.37MB / 3.10GB 112.3s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 131.07MB / 451.97MB 116.5s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 94.37MB / 3.10GB 117.4s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 155.19MB / 451.97MB 119.4s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 183.50MB / 451.97MB 120.8s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 206.57MB / 451.97MB 121.6s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 231.74MB / 451.97MB 122.4s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 256.90MB / 451.97MB 123.1s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 94.37MB / 3.10GB 122.5s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 281.02MB / 451.97MB 124.6s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 305.14MB / 451.97MB 125.4s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 328.20MB / 451.97MB 128.1s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 94.37MB / 3.10GB 127.6s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 330.30MB / 451.97MB 133.2s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 94.37MB / 3.10GB 132.7s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 331.35MB / 451.97MB 138.3s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 94.37MB / 3.10GB 137.8s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 354.42MB / 451.97MB 140.4s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 377.49MB / 451.97MB 143.1s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 94.37MB / 3.10GB 142.9s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 404.75MB / 451.97MB 145.4s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 430.96MB / 451.97MB 147.0s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 451.97MB / 451.97MB 148.3s done
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 94.37MB / 3.10GB 148.0s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 94.37MB / 3.10GB 153.1s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 94.37MB / 3.10GB 158.2s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 94.37MB / 3.10GB 163.3s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 94.37MB / 3.10GB 168.4s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 94.37MB / 3.10GB 173.5s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 94.37MB / 3.10GB 178.6s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 94.37MB / 3.10GB 183.7s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 112.20MB / 3.10GB 188.8s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 158.33MB / 3.10GB 193.9s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 226.49MB / 3.10GB 199.0s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 308.28MB / 3.10GB 204.1s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 361.76MB / 3.10GB 209.2s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 424.67MB / 3.10GB 214.3s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 467.76MB / 3.10GB 220.1s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 552.60MB / 3.10GB 225.1s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 633.34MB / 3.10GB 230.2s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 676.33MB / 3.10GB 235.3s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 677.38MB / 3.10GB 240.4s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 681.57MB / 3.10GB 245.5s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 767.56MB / 3.10GB 250.6s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 834.67MB / 3.10GB 255.7s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 922.75MB / 3.10GB 260.8s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 984.61MB / 3.10GB 265.9s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.08GB / 3.10GB 271.0s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.16GB / 3.10GB 276.1s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.21GB / 3.10GB 281.2s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.28GB / 3.10GB 286.3s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.36GB / 3.10GB 291.4s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.39GB / 3.10GB 296.5s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.48GB / 3.10GB 301.6s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.55GB / 3.10GB 306.7s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.55GB / 3.10GB 311.8s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.62GB / 3.10GB 316.9s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.70GB / 3.10GB 322.0s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.70GB / 3.10GB 327.1s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.70GB / 3.10GB 332.2s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.70GB / 3.10GB 337.3s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.70GB / 3.10GB 342.4s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.70GB / 3.10GB 347.5s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.70GB / 3.10GB 352.6s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.70GB / 3.10GB 357.7s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.70GB / 3.10GB 362.8s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.70GB / 3.10GB 367.9s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.70GB / 3.10GB 373.0s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.70GB / 3.10GB 378.1s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.70GB / 3.10GB 383.2s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.70GB / 3.10GB 388.3s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.70GB / 3.10GB 393.4s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.70GB / 3.10GB 398.5s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.70GB / 3.10GB 403.6s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.70GB / 3.10GB 408.7s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.70GB / 3.10GB 413.8s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.70GB / 3.10GB 418.9s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.71GB / 3.10GB 424.0s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.84GB / 3.10GB 429.1s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.00GB / 3.10GB 432.4s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.16GB / 3.10GB 435.6s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.31GB / 3.10GB 439.9s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.47GB / 3.10GB 443.7s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.63GB / 3.10GB 446.7s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.79GB / 3.10GB 450.3s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.94GB / 3.10GB 454.2s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 3.10GB / 3.10GB 459.3s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 3.10GB / 3.10GB 461.1s done
#7 extracting sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964
#7 extracting sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 36.2s done
#7 DONE 498.7s

#7 [ 1/13] FROM docker.io/ashleykza/runpod-base:2.4.2-python3.12-cuda12.4.1-torch2.6.0@sha256:e4fc41c3b1d92bc5ad330069e173b3838f642ebe017207eddc84dc58519e6c34
#7 extracting sha256:1c9ae54463800595519da3cd4f4edd93c65be533962cc0585bf7402875f4b169
#7 extracting sha256:1c9ae54463800595519da3cd4f4edd93c65be533962cc0585bf7402875f4b169 0.8s done
#7 extracting sha256:17919fa24e1fe2eb109dbb1086f82b90c0bd097b50031a8df86b61a788a9f4cf
#7 extracting sha256:17919fa24e1fe2eb109dbb1086f82b90c0bd097b50031a8df86b61a788a9f4cf 0.5s done
#7 DONE 499.9s

#7 [ 1/13] FROM docker.io/ashleykza/runpod-base:2.4.2-python3.12-cuda12.4.1-torch2.6.0@sha256:e4fc41c3b1d92bc5ad330069e173b3838f642ebe017207eddc84dc58519e6c34
#7 extracting sha256:106561ca9d37bf6acd461c0c5a409c0371628d1d4e6d13856b3bb7b45536097e
#7 extracting sha256:106561ca9d37bf6acd461c0c5a409c0371628d1d4e6d13856b3bb7b45536097e 0.4s done
#7 extracting sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83
#7 extracting sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 23.0s done
#7 extracting sha256:fa29877684af4577b41750e81cc854e2b9c9360f947e4b95c974accad5cb8292
#7 extracting sha256:fa29877684af4577b41750e81cc854e2b9c9360f947e4b95c974accad5cb8292 0.1s done
#7 extracting sha256:1b773990fae1f413b3a9e447efbd4638254822a00b2e50fcd4e72b9ac0d63a76
#7 extracting sha256:1b773990fae1f413b3a9e447efbd4638254822a00b2e50fcd4e72b9ac0d63a76 0.1s done
#7 extracting sha256:7971bf47b68069ee6185c0efe67ed73f2a8d55ddf008e124a3b4bdc03f3ba013
#7 extracting sha256:7971bf47b68069ee6185c0efe67ed73f2a8d55ddf008e124a3b4bdc03f3ba013 0.2s done
#7 DONE 523.7s

#7 [ 1/13] FROM docker.io/ashleykza/runpod-base:2.4.2-python3.12-cuda12.4.1-torch2.6.0@sha256:e4fc41c3b1d92bc5ad330069e173b3838f642ebe017207eddc84dc58519e6c34
#7 extracting sha256:a957f94a54529561faa41771a2e449b5298d7c2170f655f4d1bc9d12f2a754cc 0.1s done
#7 DONE 523.9s

#8 [ 2/13] COPY --chmod=755 build/* ./
#8 DONE 4.0s

#9 [ 3/13] RUN /install_comfyui.sh
#9 0.150 /install_comfyui.sh: line 1: ï»¿#!/usr/bin/env: No such file or directory
#9 0.151 ++ git clone https://github.com/comfyanonymous/ComfyUI.git /ComfyUI
#9 0.170 Cloning into '/ComfyUI'...
#9 11.69 ++ cd /ComfyUI
#9 11.69 /install_comfyui.sh: line 7: COMFYUI_VERSION: unbound variable
#9 ERROR: process "/bin/bash --login -c /install_comfyui.sh" did not complete successfully: exit code: 1
------
 > [ 3/13] RUN /install_comfyui.sh:
0.150 /install_comfyui.sh: line 1: ï»¿#!/usr/bin/env: No such file or directory
0.151 ++ git clone https://github.com/comfyanonymous/ComfyUI.git /ComfyUI
0.170 Cloning into '/ComfyUI'...
11.69 ++ cd /ComfyUI
11.69 /install_comfyui.sh: line 7: COMFYUI_VERSION: unbound variable
------
WARNING: No output specified with docker-container driver. Build result will only remain in the build cache. To push result image into registry use --push or to load image into docker use --load
Dockerfile:13
--------------------
  11 |     ARG INDEX_URL
  12 |     ARG COMFYUI_COMMIT
  13 | >>> RUN /install_comfyui.sh
  14 |
  15 |     # Install Application Manager
--------------------
ERROR: failed to solve: process "/bin/bash --login -c /install_comfyui.sh" did not complete successfully: exit code: 1

View build details: docker-desktop://dashboard/build/silly_newton/silly_newton0/s40ek0sfozc0gi9xq6h4bd54o

C:\Users\sergi\Desktop\codigos\templates\comfyui-docker1>docker buildx bake -f docker-bake.hcl --progress=plain
#0 building with "silly_newton" instance using docker-container driver

#1 [internal] load local bake definitions
#1 reading docker-bake.hcl 1.17kB / 1.17kB done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.02kB done
#2 WARN: InvalidDefaultArgInFrom: Default value for ARG ${BASE_IMAGE} results in empty or invalid base image name (line 2)
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/ashleykza/runpod-base:2.4.2-python3.12-cuda12.4.1-torch2.6.0
#3 ...

#4 [auth] ashleykza/runpod-base:pull token for registry-1.docker.io
#4 DONE 0.0s

#3 [internal] load metadata for docker.io/ashleykza/runpod-base:2.4.2-python3.12-cuda12.4.1-torch2.6.0
#3 DONE 2.4s

#5 [internal] load .dockerignore
#5 transferring context: 2B done
#5 DONE 0.0s

#6 [internal] load build context
#6 transferring context: 519B 0.0s done
#6 DONE 0.0s

#7 [ 1/13] FROM docker.io/ashleykza/runpod-base:2.4.2-python3.12-cuda12.4.1-torch2.6.0@sha256:e4fc41c3b1d92bc5ad330069e173b3838f642ebe017207eddc84dc58519e6c34
#7 resolve docker.io/ashleykza/runpod-base:2.4.2-python3.12-cuda12.4.1-torch2.6.0@sha256:e4fc41c3b1d92bc5ad330069e173b3838f642ebe017207eddc84dc58519e6c34 0.0s done
#7 DONE 0.3s

#7 [ 1/13] FROM docker.io/ashleykza/runpod-base:2.4.2-python3.12-cuda12.4.1-torch2.6.0@sha256:e4fc41c3b1d92bc5ad330069e173b3838f642ebe017207eddc84dc58519e6c34
#7 sha256:a957f94a54529561faa41771a2e449b5298d7c2170f655f4d1bc9d12f2a754cc 0B / 975B 0.2s
#7 sha256:a957f94a54529561faa41771a2e449b5298d7c2170f655f4d1bc9d12f2a754cc 975B / 975B 0.3s done
#7 sha256:1b773990fae1f413b3a9e447efbd4638254822a00b2e50fcd4e72b9ac0d63a76 0B / 1.12kB 0.2s
#7 sha256:fa29877684af4577b41750e81cc854e2b9c9360f947e4b95c974accad5cb8292 0B / 238B 0.2s
#7 sha256:7971bf47b68069ee6185c0efe67ed73f2a8d55ddf008e124a3b4bdc03f3ba013 0B / 4.13kB 0.2s
#7 sha256:1b773990fae1f413b3a9e447efbd4638254822a00b2e50fcd4e72b9ac0d63a76 1.12kB / 1.12kB 0.4s done
#7 sha256:7971bf47b68069ee6185c0efe67ed73f2a8d55ddf008e124a3b4bdc03f3ba013 4.13kB / 4.13kB 0.5s done
#7 sha256:106561ca9d37bf6acd461c0c5a409c0371628d1d4e6d13856b3bb7b45536097e 0B / 721B 0.2s
#7 sha256:fa29877684af4577b41750e81cc854e2b9c9360f947e4b95c974accad5cb8292 238B / 238B 0.7s done
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 0B / 451.97MB 0.2s
#7 sha256:106561ca9d37bf6acd461c0c5a409c0371628d1d4e6d13856b3bb7b45536097e 721B / 721B 0.5s done
#7 sha256:17919fa24e1fe2eb109dbb1086f82b90c0bd097b50031a8df86b61a788a9f4cf 0B / 507B 0.3s
#7 sha256:1c9ae54463800595519da3cd4f4edd93c65be533962cc0585bf7402875f4b169 0B / 1.78MB 0.2s
#7 sha256:17919fa24e1fe2eb109dbb1086f82b90c0bd097b50031a8df86b61a788a9f4cf 507B / 507B 0.4s done
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 0B / 3.10GB 0.2s
#7 sha256:1c9ae54463800595519da3cd4f4edd93c65be533962cc0585bf7402875f4b169 1.05MB / 1.78MB 0.9s
#7 sha256:1c9ae54463800595519da3cd4f4edd93c65be533962cc0585bf7402875f4b169 1.78MB / 1.78MB 1.0s done
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 24.12MB / 451.97MB 2.1s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 47.19MB / 451.97MB 3.6s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 67.11MB / 3.10GB 5.3s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 70.25MB / 451.97MB 6.5s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 94.37MB / 451.97MB 10.2s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 148.90MB / 3.10GB 10.4s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 117.44MB / 451.97MB 11.7s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 142.61MB / 451.97MB 14.4s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 167.77MB / 451.97MB 15.8s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 189.79MB / 3.10GB 15.5s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 191.89MB / 451.97MB 16.7s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 214.96MB / 451.97MB 17.4s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 241.17MB / 451.97MB 19.2s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 265.29MB / 451.97MB 20.1s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 190.84MB / 3.10GB 20.6s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 290.46MB / 451.97MB 21.3s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 314.57MB / 451.97MB 22.0s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 340.79MB / 451.97MB 23.1s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 363.86MB / 451.97MB 24.7s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 386.92MB / 451.97MB 25.6s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 190.84MB / 3.10GB 25.6s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 415.24MB / 451.97MB 26.7s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 440.40MB / 451.97MB 28.5s
#7 sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 451.97MB / 451.97MB 31.0s done
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 190.84MB / 3.10GB 30.8s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 190.84MB / 3.10GB 35.8s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 191.89MB / 3.10GB 41.0s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 191.89MB / 3.10GB 46.0s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 191.89MB / 3.10GB 51.1s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 191.89MB / 3.10GB 56.2s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 191.89MB / 3.10GB 61.4s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 191.89MB / 3.10GB 66.4s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 191.89MB / 3.10GB 71.5s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 191.89MB / 3.10GB 76.6s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 191.89MB / 3.10GB 81.7s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 191.89MB / 3.10GB 86.8s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 191.89MB / 3.10GB 91.9s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 191.89MB / 3.10GB 97.0s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 191.89MB / 3.10GB 102.1s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 191.89MB / 3.10GB 107.2s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 304.09MB / 3.10GB 112.3s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 361.76MB / 3.10GB 117.4s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 432.01MB / 3.10GB 122.5s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 502.27MB / 3.10GB 127.6s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 572.52MB / 3.10GB 132.7s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 670.04MB / 3.10GB 137.8s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 752.88MB / 3.10GB 142.9s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 880.80MB / 3.10GB 148.0s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 918.55MB / 3.10GB 153.1s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 959.45MB / 3.10GB 158.2s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.02GB / 3.10GB 163.3s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.10GB / 3.10GB 168.4s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.15GB / 3.10GB 173.5s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.20GB / 3.10GB 178.6s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.27GB / 3.10GB 183.7s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.31GB / 3.10GB 188.8s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.31GB / 3.10GB 193.9s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.35GB / 3.10GB 199.0s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.44GB / 3.10GB 204.1s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.52GB / 3.10GB 209.2s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.57GB / 3.10GB 214.3s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.66GB / 3.10GB 219.4s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.71GB / 3.10GB 224.5s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.74GB / 3.10GB 229.6s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.82GB / 3.10GB 234.7s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.89GB / 3.10GB 239.8s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.93GB / 3.10GB 244.9s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.94GB / 3.10GB 250.0s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 1.99GB / 3.10GB 255.1s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.06GB / 3.10GB 260.2s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.12GB / 3.10GB 265.3s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.21GB / 3.10GB 270.4s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.25GB / 3.10GB 275.5s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.31GB / 3.10GB 280.6s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.34GB / 3.10GB 285.7s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.34GB / 3.10GB 290.8s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.34GB / 3.10GB 295.9s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.34GB / 3.10GB 301.0s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.34GB / 3.10GB 306.1s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.35GB / 3.10GB 311.2s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.42GB / 3.10GB 316.3s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.49GB / 3.10GB 321.4s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.58GB / 3.10GB 326.5s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.66GB / 3.10GB 331.6s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.76GB / 3.10GB 336.7s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.82GB / 3.10GB 342.0s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.86GB / 3.10GB 347.1s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.86GB / 3.10GB 352.2s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.86GB / 3.10GB 357.3s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.88GB / 3.10GB 362.4s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 2.97GB / 3.10GB 367.5s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 3.01GB / 3.10GB 372.6s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 3.02GB / 3.10GB 377.7s
#7 sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 3.10GB / 3.10GB 381.6s done
#7 extracting sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964
#7 extracting sha256:7d7c0559e7b40b3f173196792bba7b51bec1666bd838010672b7b6c46a5f2964 34.7s done
#7 DONE 417.5s

#7 [ 1/13] FROM docker.io/ashleykza/runpod-base:2.4.2-python3.12-cuda12.4.1-torch2.6.0@sha256:e4fc41c3b1d92bc5ad330069e173b3838f642ebe017207eddc84dc58519e6c34
#7 extracting sha256:1c9ae54463800595519da3cd4f4edd93c65be533962cc0585bf7402875f4b169
#7 extracting sha256:1c9ae54463800595519da3cd4f4edd93c65be533962cc0585bf7402875f4b169 0.5s done
#7 extracting sha256:17919fa24e1fe2eb109dbb1086f82b90c0bd097b50031a8df86b61a788a9f4cf
#7 extracting sha256:17919fa24e1fe2eb109dbb1086f82b90c0bd097b50031a8df86b61a788a9f4cf 0.3s done
#7 DONE 418.3s

#7 [ 1/13] FROM docker.io/ashleykza/runpod-base:2.4.2-python3.12-cuda12.4.1-torch2.6.0@sha256:e4fc41c3b1d92bc5ad330069e173b3838f642ebe017207eddc84dc58519e6c34
#7 extracting sha256:106561ca9d37bf6acd461c0c5a409c0371628d1d4e6d13856b3bb7b45536097e
#7 extracting sha256:106561ca9d37bf6acd461c0c5a409c0371628d1d4e6d13856b3bb7b45536097e 0.4s done
#7 extracting sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83
#7 extracting sha256:d65e8ec00f782e5dc35862de50612849fd6de8bd438d97531a089899733afc83 29.2s done
#7 DONE 448.0s

#7 [ 1/13] FROM docker.io/ashleykza/runpod-base:2.4.2-python3.12-cuda12.4.1-torch2.6.0@sha256:e4fc41c3b1d92bc5ad330069e173b3838f642ebe017207eddc84dc58519e6c34
#7 extracting sha256:fa29877684af4577b41750e81cc854e2b9c9360f947e4b95c974accad5cb8292 0.1s done
#7 extracting sha256:1b773990fae1f413b3a9e447efbd4638254822a00b2e50fcd4e72b9ac0d63a76 0.0s done
#7 extracting sha256:7971bf47b68069ee6185c0efe67ed73f2a8d55ddf008e124a3b4bdc03f3ba013 0.0s done
#7 DONE 448.1s

#7 [ 1/13] FROM docker.io/ashleykza/runpod-base:2.4.2-python3.12-cuda12.4.1-torch2.6.0@sha256:e4fc41c3b1d92bc5ad330069e173b3838f642ebe017207eddc84dc58519e6c34
#7 extracting sha256:a957f94a54529561faa41771a2e449b5298d7c2170f655f4d1bc9d12f2a754cc 0.0s done
#7 DONE 448.1s

#8 [ 2/13] COPY --chmod=755 build/* ./
#8 DONE 8.0s

#9 [ 3/13] RUN /install_comfyui.sh
#9 0.314 /install_comfyui.sh: line 1: ï»¿#!/usr/bin/env: No such file or directory
#9 0.315 ++ git clone https://github.com/comfyanonymous/ComfyUI.git /ComfyUI
#9 0.335 Cloning into '/ComfyUI'...
#9 9.161 ++ cd /ComfyUI
#9 9.161 /install_comfyui.sh: line 7: COMFYUI_VERSION: unbound variable
#9 ERROR: process "/bin/bash --login -c /install_comfyui.sh" did not complete successfully: exit code: 1
------
 > [ 3/13] RUN /install_comfyui.sh:
0.314 /install_comfyui.sh: line 1: ï»¿#!/usr/bin/env: No such file or directory
0.315 ++ git clone https://github.com/comfyanonymous/ComfyUI.git /ComfyUI
0.335 Cloning into '/ComfyUI'...
9.161 ++ cd /ComfyUI
9.161 /install_comfyui.sh: line 7: COMFYUI_VERSION: unbound variable
------
WARNING: No output specified with docker-container driver. Build result will only remain in the build cache. To push result image into registry use --push or to load image into docker use --load
Dockerfile:13
--------------------
  11 |     ARG INDEX_URL
  12 |     ARG COMFYUI_COMMIT
  13 | >>> RUN /install_comfyui.sh
  14 |
  15 |     # Install Application Manager
--------------------
ERROR: failed to solve: process "/bin/bash --login -c /install_comfyui.sh" did not complete successfully: exit code: 1

View build details: docker-desktop://dashboard/build/silly_newton/silly_newton0/y87b8dlch4b9j24nz5oct1spm

C:\Users\sergi\Desktop\codigos\templates\comfyui-docker1>
</file>

<file path="nginx/nginx.conf">
events { worker_connections 2048; }

http {
    # Increase the max body size from the default of 1MB to 500MB
    client_max_body_size 500M;

    # Increase proxy timeout from 60s to 600s
	proxy_connect_timeout 600;
	proxy_send_timeout    600;
	proxy_read_timeout    600;
	send_timeout          600;

    # InvokeAI
    server {
        listen 3000;

        location /ws {
            proxy_http_version 1.1;
            proxy_set_header Accept-Encoding gzip;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            add_header Cache-Control no-cache;
            proxy_set_header Host $host;

            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
	        proxy_set_header   X-Real-IP		$remote_addr;
            proxy_pass http://localhost:3001;
        }

        location /queue/join {
            proxy_http_version 1.1;
            proxy_set_header Accept-Encoding gzip;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            add_header Cache-Control no-cache;
            proxy_set_header Host $host;

            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
	        proxy_set_header   X-Real-IP		$remote_addr;
            proxy_pass http://localhost:3001;
        }

        location / {
            add_header Cache-Control no-cache;
            proxy_pass http://localhost:3001;
            proxy_http_version 1.1;
            proxy_set_header Accept-Encoding gzip;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Host $host;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_intercept_errors on;
            error_page 502 =200 @502;
        }

        location @502 {
            # kill cache
            add_header Last-Modified $date_gmt;
            add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            if_modified_since off;
            expires off;
            etag off;

            root /usr/share/nginx/html;
            rewrite ^(.*)$ /502.html break;
        }
    }
}
</file>

<file path="post_start.sh">
#!/usr/bin/env bash
set -euxo pipefail
# set -euxo pipefail # Consider adding this for stricter error checking if desired
echo "POST-START: Starting ComfyUI specific services..."
COMFYUI_DIR="/workspace/ComfyUI"
LOG_DIR="/workspace/logs"
LOG_FILE="${LOG_DIR}/comfyui.log"
# Ensure log directory exists
mkdir -p "${LOG_DIR}"
if [ -d "${COMFYUI_DIR}" ]; then
    echo "Found ComfyUI at ${COMFYUI_DIR}, attempting to start..."
    cd "${COMFYUI_DIR}"
    # Activate ComfyUI's virtual environment if it exists
    if [ -f "venv/bin/activate" ]; then
        echo "Activating venv in ${COMFYUI_DIR}/venv..."
        source "venv/bin/activate"
    else
        echo "Warning: venv not found at ${COMFYUI_DIR}/venv/bin/activate. Using system Python."
    fi
    # Configure TCMalloc for performance, if available
    TCMALLOC_PATH=""
    if command -v ldconfig &> /dev/null; then
        TCMALLOC_CANDIDATE=$(ldconfig -p | grep -Po "libtcmalloc.so.\d" | head -n 1)
        if [ -n "${TCMALLOC_CANDIDATE}" ]; then
            TCMALLOC_PATH="${TCMALLOC_CANDIDATE}"
            export LD_PRELOAD="${TCMALLOC_PATH}"
            echo "Using TCMalloc: ${TCMALLOC_PATH}"
        else
            echo "libtcmalloc.so not found by ldconfig. TCMalloc not enabled."
        fi
    else
        echo "ldconfig command not found. TCMalloc check skipped."
    fi
    # Base arguments. User specified port 3000. Original script used 3001.
    # Using /workspace for inputs/outputs from previous step.
    COMFYUI_BASE_ARGS="--listen --port 3000 --output-directory /workspace/comfyui_outputs --input-directory /workspace/comfyui_inputs"
    # Create I/O directories if they don't exist
    mkdir -p /workspace/comfyui_outputs
    mkdir -p /workspace/comfyui_inputs
    FINAL_ARGS="${COMFYUI_BASE_ARGS}"
    # Check for EXTRA_ARGS environment variable to append custom arguments passed to the container
    if [ -n "${EXTRA_ARGS}" ]; then
        echo "Appending EXTRA_ARGS from environment: ${EXTRA_ARGS}"
        FINAL_ARGS="${FINAL_ARGS} ${EXTRA_ARGS}"
    fi
    echo "Starting ComfyUI with args: ${FINAL_ARGS}"
    echo "Check log at ${LOG_FILE}"
    # Using python3, assuming it's correct after venv activation or system python.
    nohup python3 main.py ${FINAL_ARGS} &> "${LOG_FILE}" &
    # Deactivate venv if it was activated
    if [ -f "venv/bin/activate" ]; then # Check again in case activation failed
        if [[ "$(type -t deactivate)" == "function" ]]; then # Check if deactivate is a function
            echo "Deactivating venv."
            deactivate
        fi
    fi
else
    echo "ERROR: ComfyUI directory not found at ${COMFYUI_DIR}. Cannot start ComfyUI."
fi
echo "POST-START: ComfyUI specific services script finished."
</file>

<file path="README.md">
<div align="center">

# Docker image for ComfyUI: The most powerful and modular stable diffusion GUI, api and backend with a graph/nodes interface.

[![GitHub Repo](https://img.shields.io/badge/github-repo-green?logo=github)](https://github.com/ashleykleynhans/comfyui-docker)
[![Docker Image Version (latest semver)](https://img.shields.io/docker/v/ashleykza/comfyui?logo=docker&label=dockerhub&color=blue)](https://hub.docker.com/repository/docker/ashleykza/comfyui)
[![RunPod.io Template](https://img.shields.io/badge/runpod_template-deploy-9b4ce6?logo=linuxcontainers&logoColor=9b4ce6)](https://runpod.io/console/deploy?template=9eqyhd7vs0&ref=2xxro4sy)
<br>
![Docker Pulls](https://img.shields.io/docker/pulls/ashleykza/comfyui?style=for-the-badge&logo=docker&label=Docker%20Pulls&link=https%3A%2F%2Fhub.docker.com%2Frepository%2Fdocker%2Fashleykza%2Fcomfyui%2Fgeneral)
![Template Version](https://img.shields.io/github/v/tag/ashleykleynhans/comfyui-docker?style=for-the-badge&logo=data%3Aimage%2Fsvg%2Bxml%3Bbase64%2CPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0idXRmLTgiPz4KPCEtLSBHZW5lcmF0b3I6IEFkb2JlIElsbHVzdHJhdG9yIDI2LjUuMywgU1ZHIEV4cG9ydCBQbHVnLUluIC4gU1ZHIFZlcnNpb246IDYuMDAgQnVpbGQgMCkgIC0tPgo8c3ZnIHZlcnNpb249IjEuMSIgaWQ9IkxheWVyXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IgoJIHZpZXdCb3g9IjAgMCAyMDAwIDIwMDAiIHN0eWxlPSJlbmFibGUtYmFja2dyb3VuZDpuZXcgMCAwIDIwMDAgMjAwMDsiIHhtbDpzcGFjZT0icHJlc2VydmUiPgo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPgoJLnN0MHtmaWxsOiM2NzNBQjc7fQo8L3N0eWxlPgo8Zz4KCTxnPgoJCTxwYXRoIGNsYXNzPSJzdDAiIGQ9Ik0xMDE3Ljk1LDcxMS4wNGMtNC4yMiwyLjM2LTkuMTgsMy4wMS0xMy44NiwxLjgyTDM4Ni4xNyw1NTUuM2MtNDEuNzItMTAuNzYtODYuMDItMC42My0xMTYuNiwyOS43MwoJCQlsLTEuNCwxLjM5Yy0zNS45MiwzNS42NS0yNy41NSw5NS44LDE2Ljc0LDEyMC4zbDU4NC4zMiwzMjQuMjNjMzEuMzYsMTcuNCw1MC44Miw1MC40NSw1MC44Miw4Ni4zMnY4MDYuNzYKCQkJYzAsMzUuNDktMzguNDEsNTcuNjctNjkuMTUsMzkuOTRsLTcwMy4xNS00MDUuNjRjLTIzLjYtMTMuNjEtMzguMTMtMzguNzgtMzguMTMtNjYuMDJWNjY2LjYzYzAtODcuMjQsNDYuNDUtMTY3Ljg5LDEyMS45Mi0yMTEuNjYKCQkJTDkzMy44NSw0Mi4xNWMyMy40OC0xMy44LDUxLjQ3LTE3LjcsNzcuODMtMTAuODRsNzQ1LjcxLDE5NC4xYzMxLjUzLDguMjEsMzYuOTksNTAuNjUsOC41Niw2Ni41N0wxMDE3Ljk1LDcxMS4wNHoiLz4KCQk8cGF0aCBjbGFzcz0ic3QwIiBkPSJNMTUyNy43NSw1MzYuMzhsMTI4Ljg5LTc5LjYzbDE4OS45MiwxMDkuMTdjMjcuMjQsMTUuNjYsNDMuOTcsNDQuNzMsNDMuODIsNzYuMTVsLTQsODU3LjYKCQkJYy0wLjExLDI0LjM5LTEzLjE1LDQ2Ljg5LTM0LjI1LDU5LjExbC03MDEuNzUsNDA2LjYxYy0zMi4zLDE4LjcxLTcyLjc0LTQuNTktNzIuNzQtNDEuOTJ2LTc5Ny40MwoJCQljMC0zOC45OCwyMS4wNi03NC45MSw1NS4wNy05My45Nmw1OTAuMTctMzMwLjUzYzE4LjIzLTEwLjIxLDE4LjY1LTM2LjMsMC43NS00Ny4wOUwxNTI3Ljc1LDUzNi4zOHoiLz4KCQk8cGF0aCBjbGFzcz0ic3QwIiBkPSJNMTUyNC4wMSw2NjUuOTEiLz4KCTwvZz4KPC9nPgo8L3N2Zz4K&logoColor=%23ffffff&label=Template%20Version&color=%23673ab7)

</div>

## Installs

* Ubuntu 22.04 LTS
* CUDA 12.4
* Python 3.12.9
* Torch 2.6.0
* xformers 0.0.29.post3
* [Jupyter Lab](https://github.com/jupyterlab/jupyterlab)
* [code-server](https://github.com/coder/code-server)
* [ComfyUI](https://github.com/comfyanonymous/ComfyUI) v0.3.33
* [runpodctl](https://github.com/runpod/runpodctl)
* [OhMyRunPod](https://github.com/kodxana/OhMyRunPod)
* [RunPod File Uploader](https://github.com/kodxana/RunPod-FilleUploader)
* [croc](https://github.com/schollz/croc)
* [rclone](https://rclone.org/)
* [Application Manager](https://github.com/ashleykleynhans/app-manager)
* [CivitAI Downloader](https://github.com/ashleykleynhans/civitai-downloader)

## Available on RunPod

This image is designed to work on [RunPod](https://runpod.io?ref=2xxro4sy).
You can use my custom [RunPod template](
https://runpod.io/console/deploy?template=9eqyhd7vs0&ref=2xxro4sy)
to launch it on RunPod.

## Building the Docker image

> [!NOTE]
> You will need to edit the `docker-bake.hcl` file and update `REGISTRY_USER`,
> and `RELEASE`.  You can obviously edit the other values too, but these
> are the most important ones.

> [!IMPORTANT]
> In order to cache the models, you will need at least 32GB of CPU/system
> memory (not VRAM) due to the large size of the models.  If you have less
> than 32GB of system memory, you can comment out or remove the code in the
> `Dockerfile` that caches the models.

```bash
# Clone the repo
git clone https://github.com/ashleykleynhans/comfyui-docker.git

# Log in to Docker Hub
docker login

# Build the image, tag the image, and push the image to Docker Hub
docker buildx bake -f docker-bake.hcl --push

# Same as above but customize registry/user/release:
REGISTRY=ghcr.io REGISTRY_USER=myuser RELEASE=my-release docker buildx \
    bake -f docker-bake.hcl --push
```

## Running Locally

### Install Nvidia CUDA Driver

- [Linux](https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html)
- [Windows](https://docs.nvidia.com/cuda/cuda-installation-guide-microsoft-windows/index.html)

### Start the Docker container

```bash
docker run -d \
  --gpus all \
  -v /workspace \
  -p 2999:2999 \
  -p 3000:3001 \
  -p 7777:7777 \
  -p 8000:8000 \
  -p 8888:8888 \
  -e JUPYTER_PASSWORD=Jup1t3R! \
  -e EXTRA_ARGS=--lowvram \
  ashleykza/comfyui:latest
```

You can obviously substitute the image name and tag with your own.

### Ports

| Connect Port | Internal Port | Description          |
|--------------|---------------|----------------------|
| 3000         | 3001          | ComfyUI              |
| 7777         | 7777          | Code Server          |
| 8000         | 8000          | Application Manager  |
| 8888         | 8888          | Jupyter Lab          |
| 2999         | 2999          | RunPod File Uploader |

### Environment Variables

| Variable             | Description                                                       | Default               |
|----------------------|-------------------------------------------------------------------|-----------------------|
| JUPYTER_LAB_PASSWORD | Set a password for Jupyter lab                                    | not set - no password |
| DISABLE_AUTOLAUNCH   | Disable application from launching automatically                  | (not set)             |
| DISABLE_SYNC         | Disable syncing if using a RunPod network volume                  | (not set)             |
| EXTRA_ARGS           | Specify extra command line arguments for ComfyUI, eg. `--lowvram` | (not set)             |

## Logs

ComfyUI creates a log file, and you can tail it instead of
killing the service to view the logs

| Application | Log file                    |
|-------------|-----------------------------|
| ComfyUI     | /workspace/logs/comfyui.log |

## Community and Contributing

Pull requests and issues on [GitHub](https://github.com/ashleykleynhans/comfyui-docker)
are welcome. Bug fixes and new features are encouraged.

## Appreciate my work?

<a href="https://www.buymeacoffee.com/ashleyk" target="_blank"><img src="https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png" alt="Buy Me A Coffee" style="height: 60px !important;width: 217px !important;" ></a>
</file>

<file path="scripts/pre_start.sh">
#!/usr/bin/env bash
set -euxo pipefail
export PYTHONUNBUFFERED=1
export APP_NAME="ComfyUI" # Renamed from APP to avoid conflict if APP is used by base scripts
COMFYUI_DIR="/workspace/${APP_NAME}"
COMFYUI_VENV_DIR="${COMFYUI_DIR}/venv"
TEMPLATE_VERSION_FILE="${COMFYUI_DIR}/template.json" # Tracks version of ComfyUI setup in workspace
LOG_DIR="/workspace/logs"
mkdir -p "${LOG_DIR}" # Ensure logs directory exists early
echo "PRE-START for ${APP_NAME}"
echo "Template Version (from build): ${TEMPLATE_VERSION}" # This is TEMPLATE_VERSION from base Dockerfile, usually RunPod template version
echo "ComfyUI Version to install (from ENV): ${COMFYUI_VERSION}"
echo "Torch Version to install (from ENV): ${TORCH_VERSION}"
echo "XFormers Version to install (from ENV): ${XFORMERS_VERSION}"
echo "Index URL for Torch/XFormers (from ENV): ${INDEX_URL}"
# Function to install ComfyUI and its dependencies into the workspace
setup_comfyui_in_workspace() {
    echo "Setting up ComfyUI in ${COMFYUI_DIR}..."
    echo "Cloning ComfyUI repository..."
    git clone https://github.com/comfyanonymous/ComfyUI.git "${COMFYUI_DIR}"
    cd "${COMFYUI_DIR}"
    if [ -n "${COMFYUI_VERSION}" ]; then
        echo "Checking out ComfyUI version: ${COMFYUI_VERSION}"
        git checkout "${COMFYUI_VERSION}"
    else
        echo "Warning: COMFYUI_VERSION not set, using default branch."
    fi
    echo "Creating Python virtual environment in ${COMFYUI_VENV_DIR}..."
    python3 -m venv --system-site-packages "${COMFYUI_VENV_DIR}"
    echo "Activating venv to install ComfyUI requirements..."
    source "${COMFYUI_VENV_DIR}/bin/activate"
    echo "Installing PyTorch, torchvision, torchaudio..."
    pip3 install --no-cache-dir torch=="${TORCH_VERSION}" torchvision torchaudio --index-url "${INDEX_URL}"
    echo "Installing xformers..."
    pip3 install --no-cache-dir xformers=="${XFORMERS_VERSION}" --index-url "${INDEX_URL}"
    echo "Installing ComfyUI requirements from requirements.txt..."
    if [ -f "requirements.txt" ]; then
        pip3 install --no-cache-dir -r requirements.txt
    else
        echo "Warning: requirements.txt not found in ${COMFYUI_DIR}"
    fi
    echo "Installing accelerate and sageattention..."
    pip3 install --no-cache-dir accelerate sageattention
    echo "Installing specific numpy version (1.26.4)..."
    pip3 install --no-cache-dir numpy==1.26.4
    # pip cache purge # Consider if needed
    echo "Installing ComfyUI-Manager..."
    COMFYUI_MANAGER_DIR="${COMFYUI_DIR}/custom_nodes/ComfyUI-Manager"
    git clone https://github.com/ltdrdata/ComfyUI-Manager.git "${COMFYUI_MANAGER_DIR}"
    if [ -f "${COMFYUI_MANAGER_DIR}/requirements.txt" ]; then
        pip3 install --no-cache-dir -r "${COMFYUI_MANAGER_DIR}/requirements.txt"
    else
        echo "Warning: requirements.txt not found in ${COMFYUI_MANAGER_DIR}"
    fi
    echo "Deactivating venv."
    deactivate
    # Save a marker or version file to indicate successful setup for this version
    # This uses COMFYUI_VERSION from ENV, which is set from RELEASE in docker-bake.hcl by default
    echo "{\"template_name\": \"${APP_NAME}\", \"comfyui_version\": \"${COMFYUI_VERSION}\", \"setup_timestamp\": \"$(date +%s)\"}" > "${TEMPLATE_VERSION_FILE}"
    echo "ComfyUI setup complete in ${COMFYUI_DIR} for version ${COMFYUI_VERSION}"
}
# Check if ComfyUI is already set up for the current version
SHOULD_SETUP_COMFYUI=true
if [ -f "${TEMPLATE_VERSION_FILE}" ]; then
    EXISTING_SETUP_VERSION=$(jq -r '.comfyui_version // empty' "${TEMPLATE_VERSION_FILE}")
    echo "Found existing ComfyUI setup version in workspace: ${EXISTING_SETUP_VERSION}"
    if [ "${EXISTING_SETUP_VERSION}" == "${COMFYUI_VERSION}" ]; then
        if [ -d "${COMFYUI_VENV_DIR}" ]; then # Also check if venv dir exists
             echo "ComfyUI version ${COMFYUI_VERSION} already set up in workspace. Skipping setup."
             SHOULD_SETUP_COMFYUI=false
        else
            echo "ComfyUI version ${COMFYUI_VERSION} marker found, but venv missing. Proceeding with setup."
        fi
    else
        echo "ComfyUI version mismatch (found ${EXISTING_SETUP_VERSION}, want ${COMFYUI_VERSION}). Proceeding with setup."
        # Optionally, could add logic here to remove the old COMFYUI_DIR before setting up the new one
        # rm -rf "${COMFYUI_DIR}" # Be careful with this!
    fi
else
    echo "No existing ComfyUI setup version file found. Proceeding with setup."
fi
if [ "${SHOULD_SETUP_COMFYUI}" = true ] ; then
    # Before setting up, check if the directory exists from a previous failed/partial setup or different version
    if [ -d "${COMFYUI_DIR}" ]; then
        echo "Warning: ${COMFYUI_DIR} already exists. This might be a partial setup or a different version. Re-cloning into it."
        # A safer approach might be to rename/backup the old dir first, then clone.
        # For now, let's assume git clone into existing dir handles things or fails gracefully if not empty and not a git repo.
        # A more robust solution: rm -rf "${COMFYUI_DIR}" before git clone, but ensure it's the right thing to do.
    fi
    setup_comfyui_in_workspace
fi
# The old sync_apps and fix_venvs are no longer needed here as ComfyUI is directly set up in /workspace.
# Start application manager (from original pre_start.sh)
if [ -d "/app-manager" ]; then # app-manager is installed in the image at /app-manager by install_app_manager.sh
    echo "Starting Application Manager..."
    cd /app-manager
    nohup npm start &> "${LOG_DIR}/app-manager.log" &
    echo "Application Manager started. Log: ${LOG_DIR}/app-manager.log"
else
    echo "Application Manager not found at /app-manager, skipping its start."
fi
# DO NOT start ComfyUI here. post_start.sh (called by base start.sh) will handle it.
# The original pre_start.sh had logic to call /start_comfyui.sh based on DISABLE_AUTOLAUNCH and EXTRA_ARGS.
# That responsibility is now with post_start.sh for ComfyUI.
echo "PRE-START script for ${APP_NAME} finished."
</file>

<file path="scripts/start_comfyui.sh">
#!/usr/bin/env bash
set -euxo pipefail
ARGS=("$@" --listen 0.0.0.0 --port 3001)
export PYTHONUNBUFFERED=1
echo "Starting ComfyUI"
cd /workspace/ComfyUI
source venv/bin/activate
TCMALLOC="$(ldconfig -p | grep -Po "libtcmalloc.so.\d" | head -n 1)"
export LD_PRELOAD="${TCMALLOC}"
python3 main.py "${ARGS[@]}" > /workspace/logs/comfyui.log 2>&1 &
echo "ComfyUI started"
echo "Log file: /workspace/logs/comfyui.log"
deactivate
</file>

</files>

<instruction>
This file contains the entire codebase of library. Create or edit the current `.cursor/rules/project-structure.mdc` rules, to include the project's main purpose, key features, directory structure and overall architecture. Use `directory_structure` from this file, to create a formatted tree structure of the project, with a short description for each folder.

Example PROJECT_STRUCTURE.md output:

```markdown
---
description: Project structure and file organization guidelines
globs: 
alwaysApply: false
---
# Project name

Short description of the project

## Purpose

The purpose of the project

## Key features

- Feature 1: do something
- Feature 2: do something else

## Directory structure

```tree
.
├── parent_folder/             # this is the parent_folder description
│   ├── child_folder/               # this is the child_folder description
│   └── other_child_folder/         # this is the other_child_folder description
└── single_folder/             # this is the single folder description
```

## Usage

Run command 

## Technical implementation

The project is built with:
- TypeScript: for type-safe code

## Future Enhancements

- Add support for feature 3
- Enhance feature 2

```

After editing the file, tell the user he might need to refresh the Explorer or restart Cursor to see the applied changes.
</instruction>
